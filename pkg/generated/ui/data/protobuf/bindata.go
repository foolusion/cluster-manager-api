// Code generated by go-bindata. DO NOT EDIT. @generated
// sources:
// api/api.proto
package protobuf

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _apiProto = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3b\x5d\x73\x1b\x37\x92\xef\xfa\x15\x5d\x7a\x39\xea\xca\x22\x2d\xd9\x4e\x72\xd2\xfa\xb2\x5c\xca\x71\x58\xb6\x25\x95\x28\xdb\x95\x27\x16\x38\xd3\x1c\x62\x35\x03\x4c\x00\x0c\x69\x66\x2b\xff\xfd\x0a\x5f\x33\xc0\xcc\x90\x92\x65\xf9\x52\xb7\x75\xaa\x4a\x4c\x02\x8d\x46\xa3\xbb\xd1\x5f\x68\x8e\x46\x30\xe1\xe5\x56\xd0\x6c\xa5\xe0\xf4\xf9\xc9\x4f\x30\x23\x85\xac\x58\x06\xb3\x8b\x19\x4c\x72\x5e\xa5\x70\x49\x14\x5d\x23\x4c\x78\x51\x56\x8a\xb2\x0c\x6e\x91\x14\x40\x2a\xb5\xe2\x42\x0e\x0f\x46\xa3\x83\xd1\x08\xde\xd3\x04\x99\xc4\x14\x2a\x96\xa2\x00\xb5\x42\x18\x97\x24\x59\xa1\x9f\x79\x06\x9f\x50\x48\xca\x19\x9c\x0e\x9f\xc3\x40\x03\x1c\xba\xa9\xc3\xa3\x73\x8d\x62\xcb\x2b\x28\xc8\x16\x18\x57\x50\x49\x04\xb5\xa2\x12\x96\x34\x47\xc0\x2f\x09\x96\x0a\x28\x83\x84\x17\x65\x4e\x09\x4b\x10\x36\x54\xad\xcc\x3e\x0e\x8b\xa6\x04\x7e\x73\x38\xf8\x42\x11\xca\x80\x40\xc2\xcb\x2d\xf0\x65\x08\x08\x44\x39\xa2\xf5\xdf\x4a\xa9\xf2\x6c\x34\xda\x6c\x36\x43\x62\x08\x1e\x72\x91\x8d\x72\x0b\x2a\x47\xef\xa7\x93\x37\x97\xb3\x37\xc7\xa7\xc3\xe7\x6e\xd1\x47\x96\xa3\x94\x20\xf0\xf7\x8a\x0a\x4c\x61\xb1\x05\x52\x96\x39\x4d\xc8\x22\x47\xc8\xc9\x06\xb8\x00\x92\x09\xc4\x14\x14\xd7\x44\x6f\x04\xd5\x7c\x7b\x06\x92\x2f\xd5\x86\x08\xd4\x68\x52\x2a\x95\xa0\x8b\x4a\x45\x3c\xf3\x24\x52\x19\x01\x70\x06\x84\xc1\xe1\x78\x06\xd3\xd9\x21\xfc\x63\x3c\x9b\xce\x9e\x69\x24\x9f\xa7\xb7\xbf\x5e\x7d\xbc\x85\xcf\xe3\x9b\x9b\xf1\xe5\xed\xf4\xcd\x0c\xae\x6e\x60\x72\x75\x79\x31\xbd\x9d\x5e\x5d\xce\xe0\xea\x17\x18\x5f\xfe\x06\xef\xa6\x97\x17\xcf\x00\xa9\x5a\xa1\x00\xfc\x52\x0a\x7d\x02\x2e\x80\x6a\x6e\x62\x6a\x58\x37\x43\x8c\x48\x58\x72\x4b\x92\x2c\x31\xa1\x4b\x9a\x40\x4e\x58\x56\x91\x0c\x21\xe3\x6b\x14\x4c\x6b\x42\x89\xa2\xa0\x52\x4b\x55\x02\x61\xa9\x46\x93\xd3\x82\x2a\xa2\xcc\x50\xe7\x5c\xc3\x03\x0d\xf2\x81\x26\x2b\x82\x39\x7c\x42\x86\x7f\x50\x02\x7f\x2b\xd6\xf6\xd3\xdf\xb3\x82\xd0\x7c\x98\xf0\xe2\xbf\x35\xdc\x38\xa7\x77\x04\xde\x13\x21\x91\xc1\xdf\x88\xfe\x36\xcc\xcd\xb7\x10\xf0\x40\x6e\x99\x22\x5f\xe0\x35\x1c\x96\x82\x2b\xfe\xe2\xf0\xfc\xe0\xa0\x24\xc9\x9d\x26\x35\xc9\x2b\xa9\x50\xcc\x0b\xc2\x48\x86\x62\x4e\x4a\x7a\x7e\x70\x40\x8b\x92\x0b\x05\x87\x19\xe7\x59\x8e\x23\x52\xd2\x11\x61\x8c\x3b\xb2\x87\x06\xcd\xe1\x79\x0d\x66\xbe\x27\xc7\x19\xb2\x63\xb9\x21\x59\x86\x62\xc4\x4b\x03\xda\xbb\xec\xe0\xc0\xce\xc2\x20\x13\x65\x32\xcc\x88\xc2\x0d\xd9\xda\xe9\x64\x9e\x21\x9b\x3b\x2c\x43\x87\x65\xc8\x4b\x64\xa4\xa4\xeb\x53\x3f\x73\x04\xaf\xe1\x5f\x07\x00\x94\x2d\xf9\x99\xf9\x04\xa0\xa8\xca\xf1\x0c\x0e\x27\xf6\x48\xf0\xc1\x1e\x09\xc6\xd7\xd3\xc3\x73\x03\xb1\xb6\x17\xec\x0c\x0e\xd7\xcf\x87\xa7\xc3\xe7\x6e\x38\xe1\x4c\x91\x44\x79\x3c\xfa\x8f\x91\x42\xa3\xf2\x77\x7d\x72\x39\xb9\x75\xc0\xfa\xaf\x12\xf9\x19\x1c\xea\x8b\x21\xcf\x46\xa3\x8c\xaa\x55\xb5\xd0\xbc\x1e\x49\x0b\x7f\x9c\xb0\x44\x8d\x1c\x6b\x8f\x1d\x6b\x8f\x49\x49\x03\x1c\xa8\x05\x74\x06\x87\x24\x2d\x28\xfb\x7b\xb8\x70\x48\xb9\x83\xfb\x53\xff\x63\xfe\x87\x5f\x14\x0a\x46\xf2\x79\xca\x13\xe9\x09\xfd\x56\x32\x52\x94\x89\xa0\x86\xc5\x67\x70\xf8\x81\x0b\x04\xb2\xe0\x95\x82\x5d\x1c\xfc\xf3\x00\x40\x26\x2b\x2c\x50\x9e\xc1\xaf\xb7\xb7\xd7\xb3\xf3\xf6\x88\x1e\x48\x38\x93\x95\x19\x39\x74\x17\x5f\x6f\x31\xfa\xa7\xe4\xcc\xa0\x29\x05\x4f\xab\x64\xd7\xfc\x9f\xe7\x07\x07\x12\xc5\x9a\x26\x58\x13\x62\xcf\xab\xef\x33\xcd\x73\xbd\x7e\x4d\x8d\xa5\x24\x5e\x7f\xcd\xbc\x28\x13\x98\x08\x24\x0a\xfd\xba\x41\xf4\xf5\x83\xcc\x8e\x40\xa0\xaa\x04\x93\xad\xa9\x1b\x2c\xf3\xed\x51\xa0\x00\xb5\x86\x9a\x1b\x30\x24\x25\x1d\x6a\x46\x7b\xbd\x6b\xfe\x4a\x2e\x15\x9c\xc1\xa1\xb9\x24\xeb\x13\xcf\xee\xc3\x08\x68\xc1\xd3\xad\x06\xfa\xcf\x66\xf8\x4f\x27\xe2\xe8\x64\x02\x95\xa0\xb8\xb6\x76\x46\x2a\xa2\x2a\xa9\x6d\x73\x7d\x4c\x6d\x43\x80\x2a\x09\x77\xd5\x02\x13\xce\x96\x34\x33\x66\x28\xe1\x8c\x61\xa2\xe8\x9a\xaa\x6d\xcd\x8a\xb7\xa8\x6a\x3e\x34\x9f\x63\x26\x34\xe3\x8f\xe7\x40\x86\xfb\x19\xd0\x7b\xd2\x14\x73\x54\xd8\x23\xc0\x0b\x33\x51\x13\x1e\x7d\x8d\x69\x8f\xa6\x1e\x4f\xbe\xa3\xe4\xab\x4f\x40\xd2\x7f\x56\x52\x01\xd9\xab\x8e\x63\x03\xe4\x68\xbc\xe4\x29\x4a\x18\x44\x63\xf1\x91\xa2\xa9\x6f\xd0\xc9\xea\x3b\xa8\x24\x81\x9c\x4a\xa5\xd5\xd1\xe1\x93\x3d\x9a\xf6\x5e\x83\x0c\xe2\xef\xbb\x34\x4e\xcf\x3d\xb5\xd6\x8d\x34\x8d\xf7\x9c\x88\x32\xa9\x48\x9e\xc3\x80\x0b\x10\xe8\xbe\x1d\x81\xa2\x79\x1e\x48\xee\xda\x4b\xf5\xd6\x8c\xc3\xa0\x35\x10\x9f\xaa\x35\xf9\x74\xe6\xc4\x52\xf5\x38\xd1\xed\x38\xe8\x0a\xf3\x02\x92\x15\x11\xca\x43\xdf\xea\x40\x72\xa3\x97\x2c\x50\x7b\x05\x25\xaa\xc4\x84\xb4\xd4\xd8\x1e\x0d\x0a\x2b\x22\x81\xe4\x02\x49\xba\x85\x05\x22\x83\x14\xcb\x9c\x6f\x31\x6d\xe2\x4c\x49\x0a\x34\x9e\xb3\x66\xe2\xd4\xee\xf9\x2b\xe6\xc5\xc4\x60\x19\xb4\x47\x62\x36\xb6\x67\x9f\x8e\x8f\xfa\xd0\x8f\xe3\xa2\xb3\x0f\xf5\x71\x5b\xec\x6b\x6c\x56\x70\xca\xd6\x40\x9f\xdd\x7a\x82\x33\x76\x2d\x57\x7c\xca\x5d\xf7\xb9\x12\xcc\x87\x42\x26\x80\x12\x85\x71\xc0\xce\xf9\x93\x92\x82\xf6\xbf\xc1\x5d\x78\x8b\xca\xe5\x26\xd3\x00\x7c\xd0\x0c\x77\xae\xb8\x1b\x7f\xb2\xeb\xed\xc8\x7d\xd8\xd9\xaa\x32\x13\x24\x45\xb7\x99\x34\x1e\x92\x40\x46\xd7\xc8\x3a\x06\xfa\x2d\xaa\x8f\x16\xdc\x59\xa5\xf6\x09\x77\xce\x76\xce\xbc\x13\xf2\xc9\x8d\x9c\x3b\xe0\x7d\x0e\x4a\x29\x2c\x4a\xa5\x73\x2c\xcf\x91\xae\x83\x8a\x89\x86\x41\xfc\x3d\x3e\x63\x3c\xf7\xd4\xee\xa9\x7b\xaa\xaf\xb9\xa5\x55\x99\x12\x1d\x4f\x6c\x24\x24\x02\x53\x64\x8a\x92\x5c\xea\x34\x39\x75\xf2\xef\x9e\x5c\xaf\x18\x7f\x9e\x4d\x02\xf8\x41\xdf\x68\x9b\x0b\x5d\x88\xa7\xe3\x45\x83\x73\x44\x36\xf2\xdb\x78\xf1\x47\x25\xf0\x2b\xb9\xa1\x97\xf4\xf1\xa3\x35\xde\xcb\x91\x16\xcc\xf7\xe1\x89\xde\xe4\xe1\x5c\xf9\xf3\xe0\x00\x59\x55\x58\x67\x9e\xd6\x89\x84\x4e\xbb\x97\x94\x61\x0a\xaf\xe1\xb9\x85\xd5\x8a\xf3\x1a\x4e\xdc\x17\xc3\xb9\xd7\x70\xea\xd2\xc6\x62\x43\xcc\xf7\x17\xe7\x35\x46\x77\x09\x66\x36\x46\xaf\xf3\x93\x4b\xae\x40\xa2\xf5\x0c\xb3\xdb\xf1\xed\xc7\xd9\xfc\xe3\xe5\xec\xfa\xcd\x64\xfa\xcb\xf4\xcd\x45\xb3\x9d\x71\xba\x08\xd7\x37\x57\x9f\xa6\xb3\xe9\xd5\xe5\xf4\xf2\xad\x89\xf7\x11\x28\x4b\x75\x42\x84\xd2\xb8\x54\x1f\xf7\x53\x09\x0b\xa4\x2c\xd3\xe2\x24\x0a\xd3\xa1\xc1\x12\x2d\xaf\xa9\x77\xb8\x6f\x3e\x5e\xde\x8b\x56\x3b\x75\xe3\xcc\x1d\x5a\x9b\x5f\x48\x58\x56\x79\xbe\x85\x4a\x92\x45\x8e\x76\x2b\x8f\xad\x66\x8a\xdf\xe5\xcd\xe4\xea\x72\x32\x7d\xdf\xbf\x13\x51\x20\x79\x81\xb0\xe1\xe2\x4e\xe3\x25\x26\xac\xc8\xb7\xee\x30\x29\x67\x08\x9c\x85\x24\x3d\x03\x59\x25\x2b\x20\xd2\xd9\x2c\x0d\xa6\xa7\x0b\x62\x08\xe6\x02\x18\x4f\xb1\x2e\x14\x39\xe2\x02\x22\x8c\x94\x02\x02\x67\xb7\x57\xd7\xd7\x0f\x66\xaf\x75\xa9\xa9\x93\x9f\x5b\xf9\x1a\x5e\x46\x28\xdf\xdc\xdc\x5c\xdd\xec\xc5\x57\x10\x7d\x44\xa8\x98\x65\xa1\x59\x6c\x57\xbd\x86\x57\x11\xae\x8b\x37\x6f\x6f\xc6\x17\x6f\x2e\xf6\xa2\x73\xa5\x34\x73\x81\x85\x61\xa2\x66\x1a\x07\x81\x52\xe9\xac\x5d\x8b\x0b\x96\x15\x33\x13\x24\xf7\x49\x60\x8d\xfb\x35\xfc\x60\x34\xb7\x40\x29\x49\x86\x30\x21\x79\xbe\x20\xc9\x5d\xa3\xb7\x9a\x94\x8f\x37\xef\x35\xd2\x44\x87\x8c\x66\x56\x71\x33\x2d\x95\xd0\xac\xa9\x44\xde\xd1\xb1\xe9\x85\x2f\x1d\x6a\x12\x51\xaa\x70\x81\x1b\x9a\xd3\xd4\x6a\x4d\x48\x40\x2b\x2d\x0f\x2e\x90\x8e\x21\x1d\x4e\x7f\x7c\xc5\x35\x33\xeb\x34\xcb\x89\xc7\xed\xa2\xe3\xcd\x0e\x5d\xa5\xbf\xef\xbe\x36\x67\xfc\xb0\x81\x88\xb6\xf6\x76\x61\x56\x62\xd2\x2c\x0a\x75\xbc\x66\x55\x10\x28\x59\x3c\x7e\x22\xf1\x1f\xbc\x7d\xe8\x3d\xa4\xb1\x86\x41\x1d\x63\x85\xa6\xd4\x68\xf4\x59\x45\xa7\xdd\x10\x19\x9e\x15\x16\x5b\x5b\xe8\x0d\x39\xbc\xe0\x3c\x07\x7e\xd7\x39\x77\x8a\x8a\xd0\x5c\xb6\x19\xe8\x96\x6a\x7d\x29\x39\x93\x56\x1f\x7d\x9c\xa2\xb0\xa8\x01\xdb\x72\x8a\xca\x06\x0f\x11\x52\xce\xf9\x1d\xa6\x50\x95\x7b\x45\x34\xfe\x3c\x83\xc0\x53\x98\xe1\x96\x23\xb6\xf6\xb8\x91\x83\xf1\x2e\xdd\x45\x6d\x7f\xe5\x2d\x77\x63\x03\x42\x5a\xbd\x84\x25\x0c\xc8\xc6\x39\x93\x91\xb5\xee\x23\x54\xc9\x91\x35\xaa\x5e\x0d\x02\x7d\x78\xb9\x83\x2b\x2d\xa9\x4e\x5b\x56\xc5\x5a\x36\xb9\x95\x0a\x8b\xae\xdc\x42\x29\x5c\x18\xc1\xed\x95\x45\xbb\x12\x12\x2a\x13\x51\xda\x84\x05\x7b\xff\x87\xb4\x5c\x57\xdc\xe6\x73\x7c\xfb\x6f\x27\x90\xc7\x5c\xd0\x57\xbb\x39\xda\x12\xe5\x84\x57\x79\x1a\x49\xd3\xa7\xc6\x3a\x09\xdc\x79\x09\x67\x75\xcd\x6e\x87\x51\x74\x45\xbd\xdd\x17\xcd\x55\x4c\x1a\x4a\x1e\x2c\x9b\x93\xc7\xca\xe6\xf4\x7f\xe7\xb2\xd4\xf5\x9e\xc7\x5e\x18\xb7\xe8\x7d\x6f\x19\x0a\x4b\x1b\xc1\xf4\x98\xb5\x2e\xbb\x43\xa0\x86\x98\x8b\x96\x4d\x0b\xe5\x66\x9c\xd8\x49\x2f\xa3\x7a\xa0\xdd\x05\x0b\x6e\x4b\x9a\x52\xeb\x9c\x7b\x32\xee\xb8\xd8\xbb\x03\xa5\x05\x98\xfb\x13\xb4\xc3\x9c\xdd\xeb\xe3\x48\xb5\xd6\xbf\x97\x7d\x0c\x09\xcc\xd0\xff\x7d\xb6\x84\x66\x31\xa8\x97\xeb\x10\xc7\x96\xcb\xf5\xc7\x1d\x68\x03\xf8\x76\xf4\xf7\xd5\x9c\x7e\xd5\x4b\x91\x79\xf7\x81\x05\x12\x61\x9c\xe7\x1d\xb2\x70\x7f\x3b\x6e\x86\xbb\xd1\xdb\xce\x08\xa6\xd7\x23\xd4\x37\xf3\x18\x92\x4a\x08\x64\x2a\x77\x11\x05\xb5\x96\x83\xeb\x78\x95\xc8\x7b\x83\x2a\x5f\x32\xe2\x4b\x78\x57\x2d\x50\x30\x54\x18\xad\xba\xfb\x49\xce\x3d\x90\x91\xb2\x99\xe4\x0c\xf9\xb2\xa6\x62\x1e\xca\xb9\x49\xfb\xdc\x16\xda\xd6\x75\x43\xb6\x4e\xd8\x36\xfe\x3c\x33\xe7\xb5\x76\xef\xc5\xf9\x0e\xa8\x77\x0e\xca\x99\xb9\x97\x3b\xe0\x3e\x7d\xf8\x4c\x04\x1a\xd0\x3a\xd3\xfb\xd1\x67\x90\x0f\x08\xd8\xa8\x84\x5f\xc7\x8d\xb5\x5a\xd1\x6c\x35\x27\x6b\x42\x73\xb2\xa0\x3a\x16\xef\xc4\xfc\x4b\xb2\x10\x34\x71\x11\x93\xce\xc9\x23\xd6\xa3\xd2\xd9\xd2\xdc\x01\x19\xe1\xef\x94\xbe\x67\x44\x14\xc7\x6b\x26\x5e\x10\x45\x60\x82\xcc\xab\xe6\xf8\xf3\x4c\x0f\xd9\x11\x48\x89\x22\xf3\xc4\x7e\x0e\xa5\x1c\x3a\x07\x4d\x5d\x45\x63\x1f\xd8\xe7\x7b\xc2\xfa\x42\x78\xb5\xff\xf1\xdb\x15\x50\x85\x45\xed\xb0\xae\x85\xbb\x51\x95\xc0\x54\x9b\x18\x1d\xd2\x4a\x5e\x89\x04\x65\x74\x6f\x4d\x11\x98\x25\x08\x99\xe0\x55\xd9\x32\xef\xe3\xcf\x33\x3f\xff\x56\x4f\xdb\x22\x37\x4b\x70\x6e\xa1\xad\x9c\x1b\xa9\xd1\x64\xd5\x61\x86\x67\x65\xcc\x94\x48\x19\xed\x42\x81\x99\xa9\x58\x54\xf2\x18\x89\x54\xc7\x27\xcf\x00\x55\x32\x3c\xaa\x21\xeb\x4c\x27\xb3\x3a\x7f\x72\xde\x45\x12\xa9\xc2\x1f\x9c\xa1\x0c\x10\x2e\x9e\x81\xff\x7c\x9a\x98\xcf\x1b\xd4\x9f\xd3\xf6\x4e\x35\x03\xdc\x96\x21\xd6\xb9\xc5\x5a\x73\xbf\xd1\xda\x5f\xb8\x80\xcd\x0a\x99\xcd\xc2\xd5\x8a\xb2\x4c\x82\xd6\x70\x5f\xc9\x77\x79\x7f\x9b\x2d\x3d\xb2\xea\xdc\xd5\x4f\xd7\x13\xa0\xe9\x33\x58\xe4\x84\xdd\x99\xaa\x92\xfe\xef\xd0\x62\xd4\xb7\xde\x7c\xdf\xf2\xea\xf0\x19\x2c\x69\x9e\x63\x0a\x74\x69\x7a\x58\x34\x01\x5a\x3d\x3e\x5d\x4f\xda\x9c\x5c\x97\xc9\x3c\xf4\x29\x3e\xac\xc2\xa4\x12\x9a\x7f\x46\xc8\xed\x45\xd2\xcd\x5a\x15\xa8\xf3\xcd\x16\xbd\xd3\xf1\x07\x10\x3c\x6f\xfa\x36\xfc\xfd\x1d\x10\xc1\x8e\xfc\x85\x92\x92\x27\xd4\x98\x9e\x34\x6d\xef\x43\x49\x31\xd7\x18\xe6\x44\xb0\x46\x63\x1b\x6e\xb7\x14\x17\x6c\x91\x09\x08\xa8\x6d\x89\xa6\xb4\xc2\xaa\x62\xa1\x8d\xc8\xb2\x56\x5b\xd9\x66\x7d\xac\xdd\x11\xd7\x6b\xfc\x06\xdf\xa0\x78\x35\xcc\x89\xc8\x70\x87\x52\x1a\xa0\x36\x23\x3f\x50\x46\x8b\xaa\xe8\x23\x04\x06\x29\x2e\x49\x95\x2b\x73\xf7\xff\x40\xc1\x1b\x94\x94\xa9\x17\xa7\x50\x50\x36\xff\xbd\x22\x4c\x59\xa3\x16\xb3\xf8\x03\xf9\xf2\x0d\x98\xc9\x97\x10\xf3\x8b\xa0\x7e\x37\x1a\xe9\x10\x32\x74\x3e\xe3\xeb\x29\xcc\xec\x03\x45\x10\x64\x36\x2f\x11\xf0\x2f\xb7\xce\x06\x9b\x5a\xdc\x7e\xb5\x0f\xc8\xbb\xeb\xda\x81\xe9\x12\x78\x89\xc2\xba\x29\x9d\x91\x5f\xbd\xdb\x91\xc0\x79\x54\x3d\x0f\x24\x9d\x2b\xa3\x48\xe6\xcb\x5d\x19\xd5\xe9\x78\xc9\x25\x55\x5c\x6c\xdb\xb2\xcb\xa8\x0a\x3c\xe9\x49\x47\x97\x57\x44\xae\x7c\x04\xa2\x31\x25\xbc\x28\xa8\xea\xc3\x62\x67\x3a\xd2\xea\x71\x67\x4a\x20\x9a\xa3\x26\x39\x12\x66\xcd\x86\xf6\x00\xbd\x68\x35\xf0\xdc\x96\xac\x22\x07\x3c\x1a\x69\x6b\x6b\x62\x40\xe3\x3d\xda\x6b\xcd\xe0\x3c\xb5\xeb\x5e\x46\xeb\x3e\x35\x12\xce\xb8\x2d\x55\x9b\x50\xad\x28\xa9\xab\xa0\x85\x34\xf0\x80\x3f\xaf\x22\x3c\x13\xbb\x42\x34\x9e\x35\x58\x97\xf8\x49\xe3\x57\x83\x55\xd7\x39\x51\x5a\x72\x40\x95\x65\x82\x05\xb4\xe5\xf2\x11\x88\x8a\x99\x7e\xae\x20\x22\x71\x18\x4b\xbf\xb0\x27\x68\xf0\x47\x9a\xb6\x52\xd3\x1e\x5d\x71\xa7\x89\xc2\x23\x9f\xb5\x38\xa1\x27\xb1\x77\xae\x5c\x0b\x9a\x31\xb8\xbe\x4c\xea\x1d\x75\x60\x50\x42\x67\x1d\xc5\x09\x33\x4c\x04\xaa\x77\xb8\x9d\xda\x53\xea\x7b\x35\x4e\x12\x94\x51\x50\x27\x0d\xd4\xfc\x0e\xb7\xf3\x56\xb0\xdf\xe0\xb0\xab\xde\xe1\xb6\xc6\x43\x76\xe1\xb1\x13\x1a\x5d\xb7\x94\x6c\xbd\xe8\x6e\x14\xb5\x9b\xb5\x75\xb6\x6f\xe2\x4b\x3b\x17\x8e\x23\xa8\xb2\xdc\xcb\x13\x52\x96\x7d\xcc\xb8\x45\x46\x98\xda\x73\x00\x65\x01\xda\x07\xbf\x26\x52\x6e\xb8\x48\xf7\xac\x2c\x3d\x48\xa7\xbc\x5d\x2d\xea\x26\xae\x7d\xdc\x0f\xc0\x2c\xe9\x2f\xbd\x6a\x99\x64\x24\x49\x78\xc5\x94\xbd\x75\xa6\xe0\x18\x15\xf6\x9c\x4f\xb7\x81\x74\x13\xb4\x0d\xf0\xcb\x19\xe4\x9c\xa4\xb0\x20\xb9\xb6\xf4\xe2\xa8\xc5\x60\x97\x10\xd9\x6e\xae\xb1\xdb\x24\x62\xf5\x24\xa7\xc8\xd4\x34\x85\x01\xb9\x23\x67\x86\xf3\x17\x47\x21\xe5\x89\x01\xe8\x63\xb7\x5d\x6a\x35\xd0\x2d\xf7\x6c\xea\xc3\x60\x15\xd0\x5f\xaa\xfe\x70\xfa\x5d\x5f\x38\x6d\x4e\xdd\x8e\x21\x1d\xee\x9c\x27\xfe\xae\x7e\x6d\x18\xdd\xd6\xc0\x5d\x81\xf4\xfe\x70\xf8\xdd\xd7\x84\xc3\x4f\x10\xa0\xb4\xf7\xeb\xf8\x38\x16\x94\x00\x7a\xa3\xb5\x38\xb7\x6c\x53\x66\x43\x9b\x99\x22\x2c\x25\x22\x9d\x5f\x9c\xce\xd7\xa7\xfb\x03\x9c\xd3\xef\x16\xe0\xbc\xf8\x6e\x01\xce\xcb\x20\xc0\xe9\xd5\xc4\x20\x27\xad\x95\xf1\x03\x49\x56\x54\x07\xfa\x1b\x93\x57\x68\x0f\x25\xa8\xc4\x8e\x66\xd5\xca\x61\x91\xb8\x65\x06\x57\xc2\x99\x12\x3c\x9f\x97\x39\x61\x38\x67\xa6\x1f\x2d\xb4\x28\x4f\xb0\x85\x4e\x5e\x51\xd4\xb8\xc3\xda\x09\x95\x20\x57\xa6\xae\xba\xd0\x4a\xb7\x26\x79\x85\x90\xd3\x3b\x04\x5a\x9e\x99\x4e\x62\xf3\x62\xe8\x1b\x91\x08\xac\xa9\x50\x15\xc9\x61\x7a\x3d\xd2\xd3\x1e\x93\xb6\x97\xda\x4e\xd9\x37\xaa\xba\x37\x16\x92\x4a\x2a\x5e\xa0\x90\x2e\xb5\x36\xfd\xe6\x36\x86\x28\x2a\x66\xde\xd5\xf6\x94\x7c\x48\x49\xe7\xc8\xd2\x92\x53\x63\xa2\xe3\x52\x71\x53\xf0\x78\x4f\x16\x98\xc7\x16\xc2\xab\x3c\x81\x5c\x4f\xde\x5f\x48\x31\x07\xef\x5f\x60\xe7\x5a\x9e\x3f\x2a\x89\xb8\x07\xfc\xba\xeb\x5c\x73\xba\xa6\xb3\x2b\x8f\x88\xd2\x4a\x6a\x4e\x15\xd6\x41\xce\x66\xbf\xf6\x78\x8a\x1a\xa4\x4d\xf5\x8a\x4b\xb5\x67\x9d\x99\x6e\x7b\x36\x23\xd4\x9e\x35\xf6\x52\x98\xd9\xb6\x43\xbb\xfb\x49\xd6\xe1\x7a\x9d\xa9\x59\xb5\x05\xa3\xb6\x43\xab\x49\xe6\x19\x98\x4a\xe0\x2c\xdf\x02\xf1\xef\xc3\x74\xe9\x7f\x15\x81\xb9\x79\xc9\x76\x0f\xfd\xc3\x1d\xce\x34\x2e\xed\x19\x69\xc8\x7a\xdb\xc2\xdd\x86\x58\xe5\xdb\xaa\xe0\x16\xb5\x35\xa6\xdb\x2e\xd8\xff\x7e\x66\x1b\xfc\x60\x04\xbe\x23\xdf\xf5\x69\xf7\x69\x51\xd3\x3c\xe0\xfb\x75\xdc\xea\xe6\x5a\xb9\x2e\x3f\xf3\x93\x88\xd8\x09\xfa\x57\xa5\xb8\x5a\x2b\x4b\x92\xe0\x3e\x34\x94\xb5\x29\xb1\x4b\x42\x51\xd3\x42\x13\x3e\xa0\xcb\x3a\x99\x70\xf6\xf0\xc8\xf2\xd2\x75\x50\xfe\x5e\x91\xed\x90\xf2\x91\xe4\x05\x66\xd5\xd6\xf5\x36\x46\xbe\xda\x62\x7a\x0d\x27\x0d\x95\x41\x5e\x60\x17\x98\x2e\x37\xfb\xcb\x11\xdb\xdf\x38\xaa\xfb\x9b\x14\x87\xc1\xfa\x74\x78\x72\x32\x7c\x6e\x9c\x46\x84\xbb\x49\x18\x82\x5a\x93\x0c\x85\x50\xb7\xc5\x1c\x6f\x68\xea\x47\x7f\xf6\xb0\x33\xcb\x1d\xaa\x60\x45\xd6\x18\x83\xda\x6a\x6e\x29\xe8\x9a\xe6\x98\xa1\xfc\xb9\xc9\x16\xfd\x2f\x2c\x0c\x5c\xa8\x71\x35\xfb\x5d\xa7\x04\x55\xa1\x79\x74\xb6\xcb\x22\x76\xb2\xec\x14\x81\xf4\xe4\x9c\x35\x78\xc2\x4a\xe3\x83\xdf\x8d\x7e\x78\xec\xbb\xd1\x8f\x4f\xfb\x6e\xf4\xd3\xe3\xde\xf4\xfe\x6b\xdf\xb5\x6b\x3f\xbb\x13\x2b\xef\x26\xb7\x97\x95\xb1\x4a\xcb\x2a\xef\xe6\xf7\x10\x14\xd3\x1d\x7e\x09\x1b\x14\x68\x7b\x09\x43\xdd\x6a\xde\x1f\xe2\x87\xa6\x9e\x76\xd7\xe0\x8d\xf1\x29\x2e\xb1\xa1\xae\x83\xa1\x5d\x55\x76\xc6\x65\x5e\x10\x96\xb5\x3b\x1c\x4c\xcb\xea\x0c\x95\x4e\x96\xac\xc4\xdf\x22\x43\x41\x93\xa6\xa1\xd5\xb6\x00\x87\x17\xe7\xc1\xda\xf5\xf2\xb1\xda\xf5\xea\x69\xb5\xeb\x87\xc7\x69\xd7\x8f\x7b\xc5\xf9\x57\xab\x57\xb7\xcf\xf8\xaf\xd6\x2e\xd2\xaf\x5e\x97\xbe\x2b\xdc\xef\xf5\xef\xa4\x50\x63\xa8\x18\xfd\xbd\x42\xa0\xee\x07\x8d\xa9\x8b\x35\xdb\x6d\x3b\x7d\x8d\x51\x3f\x3e\x4e\x2f\x7f\xda\xa7\x07\x7f\xb5\x5a\x76\xec\x47\xef\xc3\x64\x98\x29\xda\xee\xfa\x02\x99\xda\x1b\x3d\xb7\x97\xbb\xe8\x85\xbb\xf5\xb6\x96\xd1\xfc\xa4\xac\xd5\xc1\xd6\x1f\xbc\x44\xdd\x33\x86\xda\x56\x5d\xd6\xb3\xd4\x8d\x99\xe9\x9d\x0f\xcd\x16\x03\xdb\xa1\xee\x2f\xf7\xac\x71\xe1\x49\x7f\xc4\xd2\x7a\x43\x26\x02\x9d\x44\x6d\x87\xfb\x80\xa1\xd4\x71\xc1\x96\x14\x39\x1c\x9b\xa9\x4f\x3a\x91\x90\x43\x33\xa2\xe3\x67\x64\x4a\x1e\x75\x32\x8d\xd8\xff\x9b\x90\x9d\x6c\x4d\x49\x87\x37\x3f\xfd\x18\x98\x8c\x83\x8a\x8c\x94\xa5\x0e\x3e\x78\x5e\x99\x6d\x83\x10\x6b\xb1\x55\x28\x2d\xf8\xdc\x63\x30\xba\x1d\x55\x0f\xda\x9c\x6c\x3d\xb9\x35\x1c\xf9\x78\xf3\xbe\x09\xfe\x6b\x99\xb4\x0b\x00\x51\x47\x62\x0f\x16\x23\xa8\x5a\x14\x5d\xbd\x3a\xed\xc9\xc2\xef\xe9\xf8\xef\x8f\xe1\x1f\x6d\x43\xfe\x9a\x0e\xac\x9e\x7e\x31\x97\x79\xa3\xd1\xac\x84\x33\xa9\x09\xd4\xac\xd2\x52\x70\xd1\x75\xcf\xcd\xec\xb4\xfa\xec\xff\x0d\x44\xe0\x9c\x08\x6b\x37\x57\xb9\x5d\x76\xf7\x56\x19\xb2\xdd\x95\xb0\xaf\x98\x25\x97\x92\xea\x40\xd9\xfe\x3c\x9f\xf1\x4d\x6f\x98\x5c\xaf\x69\xdb\xa9\xce\x8f\x1d\xfe\x5f\xbc\x6d\xf1\xf6\xf0\xde\x20\xd9\x60\xd8\xa0\xcd\x7f\xbe\xcf\x6c\x7d\x95\x73\xfb\x61\x8f\x94\x7a\x7d\x1b\x95\x40\x02\xa7\xb6\xbb\x57\x36\x40\xdb\xfe\x19\xe6\xde\x7e\xca\x47\x32\xb0\xbf\x33\xea\xd1\xfa\x74\xfa\xf5\xfa\xd4\xa8\x45\x8d\x30\x59\xe9\x24\xc0\xae\x69\x35\xe7\xb8\xa9\xaf\x69\xcc\x19\x8d\x22\x46\xc6\xad\x39\xc1\xcb\x5c\x0c\xd5\x6a\xcd\xf9\x61\x07\xdc\xde\xd6\x9c\x47\x86\x4d\x91\x47\xda\xb5\x5b\xc4\x80\x56\x55\x74\x83\xb0\x21\x4c\xd9\xec\x3c\xed\xab\x28\xc2\xfe\x12\x29\x49\xd3\xba\x3e\xda\x7a\x9e\xdf\xb9\x93\xc0\x82\xaf\x11\x96\x82\x17\x0f\xd9\xee\xc6\x80\x87\x9b\x5a\x04\xf5\xbe\x71\xab\x48\x5c\x3e\xec\x2e\xee\xe8\xc3\xae\x62\x20\x74\x0a\x82\x27\xbd\x1b\xf5\x6a\x43\xb4\xcb\x83\x1e\x51\x7a\x2d\x62\xfc\x90\x12\x33\xf8\x92\xa7\x08\xd7\xda\x22\x5c\xf6\xc5\x05\x3c\xc5\x79\xa9\x67\xdb\xcf\x0a\xb6\xe6\x6f\x82\xfb\x44\x20\x91\x08\x8b\xe6\xd1\xde\x56\x33\xb5\x54\xed\x03\x57\xfb\xe5\x80\xd5\xab\x53\xdc\xb5\xda\x89\xc7\x23\xa8\x1f\x08\x76\x5a\xac\x27\xb3\x83\x3b\x7e\xf1\xd6\x4d\x24\xdb\x41\x6d\xc7\xc6\x3d\x49\xfb\xd8\x3d\x94\x3d\xf5\xb1\xbb\x3f\x6c\xfb\x6e\x07\xbf\xf7\xc1\xef\x5e\xea\xbe\xf9\xf0\xff\x13\x00\x00\xff\xff\x88\xd0\xfb\x79\xce\x48\x00\x00")

func apiProtoBytes() ([]byte, error) {
	return bindataRead(
		_apiProto,
		"api.proto",
	)
}

func apiProto() (*asset, error) {
	bytes, err := apiProtoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api.proto", size: 18638, mode: os.FileMode(420), modTime: time.Unix(1546466425, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"api.proto": apiProto,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"api.proto": &bintree{apiProto, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
