// Code generated by go-bindata.
// sources:
// api/api.proto
// DO NOT EDIT!

package protobuf

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _apiProto = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3c\x6b\x73\xdb\xb6\xb2\xdf\xfd\x2b\x76\xfc\xe5\xca\x77\x62\x29\x76\x1e\xcd\xb1\x4f\x6e\x8f\x8e\x9c\x26\x9a\x24\xb6\xc7\x72\x92\xe9\x27\x0d\x44\xae\x28\x1c\x93\x00\x0b\x80\x52\xd4\x4e\xfe\xfb\x1d\xbc\x48\xf0\x25\x3f\xe2\x9c\xce\xe9\x1c\xcf\xb4\x15\x89\xc5\x62\xb1\xbb\xd8\x17\x96\x1d\x8d\x60\xc2\xf3\xad\xa0\xc9\x4a\xc1\xf1\xd3\xa3\x57\x30\x23\x99\x2c\x58\x02\xb3\xb3\x19\x4c\x52\x5e\xc4\x70\x4e\x14\x5d\x23\x4c\x78\x96\x17\x8a\xb2\x04\xae\x91\x64\x40\x0a\xb5\xe2\x42\x0e\xf7\x46\xa3\xbd\xd1\x08\x3e\xd0\x08\x99\xc4\x18\x0a\x16\xa3\x00\xb5\x42\x18\xe7\x24\x5a\xa1\x1f\x79\x02\x9f\x51\x48\xca\x19\x1c\x0f\x9f\xc2\x40\x03\xec\xbb\xa1\xfd\x83\x53\x8d\x62\xcb\x0b\xc8\xc8\x16\x18\x57\x50\x48\x04\xb5\xa2\x12\x96\x34\x45\xc0\xaf\x11\xe6\x0a\x28\x83\x88\x67\x79\x4a\x09\x8b\x10\x36\x54\xad\xcc\x3a\x0e\x8b\xa6\x04\x7e\x75\x38\xf8\x42\x11\xca\x80\x40\xc4\xf3\x2d\xf0\x65\x08\x08\x44\x39\xa2\xf5\xdf\x4a\xa9\xfc\x64\x34\xda\x6c\x36\x43\x62\x08\x1e\x72\x91\x8c\x52\x0b\x2a\x47\x1f\xa6\x93\x37\xe7\xb3\x37\x87\xc7\xc3\xa7\x6e\xd2\x27\x96\xa2\x94\x20\xf0\xb7\x82\x0a\x8c\x61\xb1\x05\x92\xe7\x29\x8d\xc8\x22\x45\x48\xc9\x06\xb8\x00\x92\x08\xc4\x18\x14\xd7\x44\x6f\x04\xd5\x7c\x7b\x02\x92\x2f\xd5\x86\x08\xd4\x68\x62\x2a\x95\xa0\x8b\x42\xd5\x78\xe6\x49\xa4\xb2\x06\xc0\x19\x10\x06\xfb\xe3\x19\x4c\x67\xfb\xf0\xcf\xf1\x6c\x3a\x7b\xa2\x91\x7c\x99\x5e\xbf\xbb\xf8\x74\x0d\x5f\xc6\x57\x57\xe3\xf3\xeb\xe9\x9b\x19\x5c\x5c\xc1\xe4\xe2\xfc\x6c\x7a\x3d\xbd\x38\x9f\xc1\xc5\x2f\x30\x3e\xff\x15\xde\x4f\xcf\xcf\x9e\x00\x52\xb5\x42\x01\xf8\x35\x17\x7a\x07\x5c\x00\xd5\xdc\xc4\xd8\xb0\x6e\x86\x58\x23\x61\xc9\x2d\x49\x32\xc7\x88\x2e\x69\x04\x29\x61\x49\x41\x12\x84\x84\xaf\x51\x30\xad\x09\x39\x8a\x8c\x4a\x2d\x55\x09\x84\xc5\x1a\x4d\x4a\x33\xaa\x88\x32\xaf\x5a\xfb\x1a\xee\x69\x90\x8f\x34\x5a\x11\x4c\xe1\x33\x32\xfc\x9d\x12\xf8\x7b\xb6\xb6\xbf\xfe\x91\x64\x84\xa6\xc3\x88\x67\xff\xa7\xe1\xc6\x29\xbd\x21\xf0\x81\x08\x89\x0c\xfe\x4e\xf4\xd3\x30\x35\x4f\x21\xe0\x9e\xdc\x32\x45\xbe\xc2\x6b\xd8\xcf\x05\x57\xfc\xd9\xfe\xe9\xde\x5e\x4e\xa2\x1b\x4d\x6a\x94\x16\x52\xa1\x98\x67\x84\x91\x04\xc5\x9c\xe4\xf4\x74\x6f\x8f\x66\x39\x17\x0a\xf6\x13\xce\x93\x14\x47\x24\xa7\x23\xc2\x18\x77\x64\x0f\x0d\x9a\xfd\xd3\x12\xcc\x3c\x47\x87\x09\xb2\x43\xb9\x21\x49\x82\x62\xc4\x73\x03\xda\x39\x6d\x6f\xcf\x8e\xc2\x20\x11\x79\x34\x4c\x88\xc2\x0d\xd9\xda\xe1\x68\x9e\x20\x9b\x3b\x2c\x43\x87\x65\xc8\x73\x64\x24\xa7\xeb\x63\x3f\x72\x00\xaf\xe1\x8f\x3d\x00\xca\x96\xfc\xc4\xfc\x02\x50\x54\xa5\x78\x02\xfb\x13\xbb\x25\xf8\x68\xb7\x04\xe3\xcb\xe9\xfe\xa9\x81\x58\xdb\x03\x76\x02\xfb\xeb\xa7\xc3\xe3\xe1\x53\xf7\x3a\xe2\x4c\x91\x48\x79\x3c\xfa\x8f\x91\x4c\xa3\xf2\x67\x7d\x72\x3e\xb9\x76\xc0\xfa\xaf\x10\xe9\x09\xec\xeb\x83\x21\x4f\x46\xa3\x84\xaa\x55\xb1\xd0\xbc\x1e\x49\x0b\x7f\x18\xb1\x48\x8d\x1c\x6b\x0f\x1d\x6b\x0f\x49\x4e\x03\x1c\xa8\x05\x74\x02\xfb\x24\xce\x28\xfb\x47\x38\x71\x48\xb9\x83\xfb\xa6\xff\x63\xfe\x85\x5f\x15\x0a\x46\xd2\x79\xcc\x23\xe9\x09\xfd\x5e\x32\x62\x94\x91\xa0\x86\xc5\x27\xb0\xff\x91\x0b\x04\xb2\xe0\x85\x82\x3e\x0e\x7e\xdb\x03\x90\xd1\x0a\x33\x94\x27\xf0\xee\xfa\xfa\x72\x76\xda\x7c\xa3\x5f\x44\x9c\xc9\xc2\xbc\xd9\x77\x07\x5f\x2f\x31\xfa\x97\xe4\xcc\xa0\xc9\x05\x8f\x8b\xa8\x6f\xfc\xdb\xe9\xde\x9e\x44\xb1\xa6\x11\x96\x84\xd8\xfd\xea\xf3\x4c\xd3\x54\xcf\x5f\x53\x63\x29\x89\xd7\x5f\x33\x2e\xf2\x08\x26\x02\x89\x42\x3f\x6f\x50\x7b\xfc\x28\x93\x03\x10\xa8\x0a\xc1\x64\x63\xe8\x0a\xf3\x74\x7b\x10\x28\x40\xa9\xa1\xe6\x04\x0c\x49\x4e\x87\x9a\xd1\x5e\xef\xaa\xbf\x9c\x4b\x05\x27\xb0\x6f\x0e\xc9\xfa\xc8\xb3\x7b\xbf\x06\xb4\xe0\xf1\x56\x03\xfd\x6f\xf5\xfa\x9b\x13\x71\x6d\x67\x02\x95\xa0\xb8\xb6\x76\x46\x2a\xa2\x0a\xa9\x6d\x73\xb9\x4d\x6d\x43\x80\x2a\x09\x37\xc5\x02\x23\xce\x96\x34\x31\x66\x28\xe2\x8c\x61\xa4\xe8\x9a\xaa\x6d\xc9\x8a\xb7\xa8\x4a\x3e\x54\xbf\xeb\x4c\xa8\xde\x3f\x9c\x03\x09\xee\x66\x40\xe7\x4e\x63\x4c\x51\x61\x87\x00\xcf\xcc\x40\x49\x78\xed\xb1\x4e\x7b\x6d\xe8\xe1\xe4\x3b\x4a\xee\xbd\x03\x12\xff\xab\x90\x0a\xc8\x4e\x75\x1c\x1b\x20\x47\xe3\x39\x8f\x51\xc2\xa0\xf6\xae\xbe\xa5\xda\xd0\x77\xe8\x64\xf1\x03\x54\x92\x40\x4a\xa5\xd2\xea\xe8\xf0\xc9\x0e\x4d\xfb\xa0\x41\x06\xf5\xe7\x3e\x8d\xd3\x63\x8f\xad\x75\x23\x4d\xe3\x2d\x3b\xa2\x4c\x2a\x92\xa6\x30\xe0\x02\x04\xba\xa7\x03\x50\x34\x4d\x03\xc9\x5d\x7a\xa9\x5e\x9b\xf7\x30\x68\xbc\xa8\xef\xaa\x31\xf8\x78\xe6\xc4\x52\xf5\x30\xd1\xf5\x6c\x74\x85\x69\x06\xd1\x8a\x08\xe5\xa1\xaf\x75\x20\xb9\xd1\x53\x16\xa8\xbd\x82\x12\x45\x64\x42\x5a\x6a\x6c\x8f\x06\x85\x15\x91\x40\x52\x81\x24\xde\xc2\x02\x91\x41\x8c\x79\xca\xb7\x18\x57\x71\xa6\x24\x19\x1a\xcf\x59\x32\x71\x6a\xd7\x7c\x87\x69\x36\x31\x58\x06\xcd\x37\x75\x36\x36\x47\x1f\x8f\x8f\x7a\xd3\x0f\xe3\xa2\xb3\x0f\xe5\x76\x1b\xec\xab\x6c\x56\xb0\xcb\xc6\x8b\x2e\xbb\xf5\x08\x7b\x6c\x5b\xae\xfa\x2e\xfb\xce\x73\x21\x98\x0f\x85\x4c\x00\x25\x32\xe3\x80\x9d\xf3\x27\x39\x05\xed\x7f\x83\xb3\xf0\x16\x95\xcb\x4d\xa6\x01\xf8\xa0\x7a\xdd\x3a\xe2\xee\xfd\xa3\x1d\x6f\x47\xee\xdd\xf6\x56\xe4\x89\x20\x31\xba\xc5\xa4\xf1\x90\x04\x12\xba\x46\xd6\x32\xd0\x6f\x51\x7d\xb2\xe0\xce\x2a\x35\x77\xd8\x3b\xda\xda\x73\x2f\xe4\xa3\x1b\x39\xb7\xc1\xdb\x1c\x94\x52\x98\xe5\x4a\xe7\x58\x9e\x23\x6d\x07\x55\x27\x1a\x06\xf5\xe7\xfa\x1e\xeb\x63\x8f\xed\x9e\xda\xbb\xba\xcf\x29\x2d\xf2\x98\xe8\x78\x62\x23\x21\x12\x18\x23\x53\x94\xa4\x52\xa7\xc9\xb1\x93\x7f\x7b\xe7\x7a\xc6\xf8\xcb\x6c\x12\xc0\x0f\xba\xde\x36\xb9\xd0\x86\x78\x3c\x5e\x54\x38\x47\x64\x23\xbf\x8f\x17\xbf\x17\x02\xef\xc9\x0d\x3d\xa5\x8b\x1f\x8d\xf7\x9d\x1c\x69\xc0\xfc\x18\x9e\xe8\x45\xee\xce\x95\x6f\x7b\x7b\xc8\x8a\xcc\x3a\xf3\xb8\x4c\x24\x74\xda\xbd\xa4\x0c\x63\x78\x0d\x4f\x2d\xac\x56\x9c\xd7\x70\xe4\x1e\x0c\xe7\x5e\xc3\xb1\x4b\x1b\xb3\x0d\x31\xcf\xcf\xec\xb3\x94\x2b\x78\x0d\xcf\x4f\x4b\xf4\xee\x44\xcc\x6c\xc0\x5e\x26\x2b\xe7\x5c\x81\x44\xeb\x26\x66\xd7\xe3\xeb\x4f\xb3\xf9\xa7\xf3\xd9\xe5\x9b\xc9\xf4\x97\xe9\x9b\xb3\x6a\x6d\xe3\x81\x11\x2e\xaf\x2e\x3e\x4f\x67\xd3\x8b\xf3\xe9\xf9\x5b\x13\xfc\x23\x50\x16\xeb\xec\x08\xa5\xf1\xaf\x3e\x09\xa0\x12\x16\x48\x59\xa2\x65\x4b\x14\xc6\x43\x83\xa5\x36\xbd\xdc\x8a\xc3\x7d\xf5\xe9\xfc\x56\xb4\xda\xc3\x1b\xcf\xee\xd0\xda\x64\x43\xc2\xb2\x48\xd3\x2d\x14\x92\x2c\x52\xb4\x4b\x79\x6c\x25\x87\xfc\x2a\x6f\x26\x17\xe7\x93\xe9\x87\xee\x95\x88\x02\xc9\x33\x84\x0d\x17\x37\x1a\x2f\x31\x31\x46\xba\x75\x9b\x89\x39\x43\xe0\x2c\x24\xe9\x09\xc8\x22\x5a\x01\x91\xce\x80\x69\x30\x3d\x9c\x11\x43\x30\x17\xc0\x78\x8c\x65\xd5\xc8\x11\x17\x10\x51\x8a\xcc\x11\x38\xbb\xbe\xb8\xbc\xbc\x33\x7b\xad\x7f\x8d\x9d\xfc\xdc\x4c\x23\xf8\x00\xe5\x9b\xab\xab\x8b\xab\x9d\xf8\x32\xa2\xb7\x08\x05\xb3\x2c\x34\x93\xed\xac\xd7\xf0\xa2\x86\xeb\xec\xcd\xdb\xab\xf1\xd9\x9b\xb3\x9d\xe8\x5c\x5d\xcd\x9c\x66\x61\x98\xa8\x99\xc6\x41\xa0\x54\x3a\x85\xd7\xe2\x82\x65\xc1\xcc\x00\x49\x7d\x46\x58\xe2\x7e\x0d\x2f\x8d\xe6\x66\x28\x25\x49\x10\x26\x24\x4d\x17\x24\xba\xa9\xf4\x56\x93\xf2\xe9\xea\x83\x46\x1a\xe9\xf8\xd1\x8c\x2a\x6e\x75\x5f\x09\xcd\x9a\x42\xa4\x2d\x1d\x9b\x9e\xf9\x3a\xa2\x26\x11\xa5\x0a\x27\xb8\x57\x73\x1a\x5b\xad\x09\x09\x68\xe4\xe8\xc1\x01\xd2\x01\xa5\xc3\xe9\xb7\xaf\xb8\x66\x66\x99\x73\x39\xf1\xb8\x55\x74\xf0\xd9\xa2\x2b\xf7\x87\xdf\x17\xea\x8c\x53\x36\x10\xb5\xa5\xbd\x91\x98\xe5\x18\x55\x93\x42\x1d\x2f\x59\x15\x44\x4d\x16\x8f\x1f\x88\xfc\x0f\xa3\x79\x7d\x9b\x34\xa6\x31\x28\x6a\xac\xd0\xd4\x1d\x8d\x3e\xab\xda\x6e\x37\x44\x86\x7b\x85\xc5\xd6\x56\x7d\x43\x0e\x2f\x38\x4f\x81\xdf\xb4\xf6\x1d\xa3\x22\x34\x95\x4d\x06\xba\xa9\x5a\x5f\x72\xce\xa4\xd5\x47\x1f\xb4\x28\xcc\x4a\xc0\xa6\x9c\x6a\x35\x84\xbb\x08\x29\xe5\xfc\x06\x63\x28\xf2\x9d\x22\x1a\x7f\x99\x41\xe0\x36\xcc\xeb\x86\x57\xb6\xc6\xb9\x92\x83\x71\x35\xed\x49\x4d\xe7\xe5\xcd\x78\x65\x03\x42\x5a\xbd\x84\x25\x0c\xc8\xc6\x79\x96\x91\x35\xf5\x23\x54\xd1\x81\x35\xaa\x5e\x0d\x02\x7d\x78\xde\xc3\x95\x86\x54\xa7\x0d\xab\x62\x2d\x9b\xdc\x4a\x85\x59\x5b\x6e\xa1\x14\xce\x8c\xe0\x76\xca\xa2\x59\x16\x09\x95\x89\x28\x6d\xc2\x82\xb5\xff\x47\x5a\xae\x2b\x6e\x93\x3b\xbe\xfd\xcb\x09\xe4\x21\x07\xf4\x45\x3f\x47\x1b\xa2\x9c\xf0\x22\x8d\x6b\xd2\xf4\x79\xb2\xce\x08\x7b\x0f\xe1\xac\x2c\xe0\xf5\x18\x45\x57\xe1\xeb\x3f\x68\xae\x7c\x52\x51\x72\x67\xd9\x1c\x3d\x54\x36\xc7\xff\x9e\xc3\x52\x16\x7f\x1e\x7a\x60\xdc\xa4\x0f\x9d\x35\x29\xcc\x6d\x04\xd3\x61\xd6\xda\xec\x0e\x81\x2a\x62\xce\x1a\x36\x2d\x94\x9b\x71\x62\x47\x9d\x8c\xea\x80\x76\x07\x2c\x38\x2d\x71\x4c\xad\x73\xee\x48\xbf\xeb\x95\xdf\x1e\x94\x16\x60\xee\x77\xd0\x0c\x73\xfa\xe7\xd7\x23\xd5\x52\xff\x9e\x77\x31\x24\x30\x43\xff\xf9\x6c\x09\xcd\x62\x50\x3c\xd7\x21\x8e\xad\x9d\xeb\x9f\x3d\x68\x03\xf8\x66\xf4\x77\x6f\x4e\xbf\xe8\xa4\xc8\x5c\x02\xc1\x02\x89\x30\xce\xf3\x06\x59\xb8\xbe\x7d\x6f\x5e\xb7\xa3\xb7\xde\x08\xa6\xd3\x23\x94\x27\xf3\x10\xa2\x42\x08\x64\x2a\x75\x11\x05\xb5\x96\x83\xeb\x78\x95\xc8\x5b\x83\x2a\x5f\x3f\xe2\x4b\x78\x5f\x2c\x50\x30\x54\x58\x9b\x75\xf3\x4a\xce\x3d\x90\x91\xb2\x19\xe4\x0c\xf9\xb2\xa4\x62\x1e\xca\xb9\xca\x01\xdd\x12\xda\xd6\xb5\x43\xb6\x56\xd8\x36\xfe\x32\x33\xfb\xb5\x76\xef\xd9\x69\x0f\xd4\x7b\x07\xe5\xcc\xdc\xf3\x1e\xb8\xcf\x1f\xbf\x10\x81\x06\xb4\x4c\xfb\x7e\xea\x81\x9d\xc9\x95\x01\xb4\xf9\xe0\x2b\x9f\x74\xde\x21\xac\xa3\x12\xde\x8d\x2b\x9b\xb6\xa2\xc9\x6a\x4e\xd6\x84\xa6\x64\x41\x75\xc4\xde\xca\x0c\x96\x64\x21\x68\xe4\xe2\x2a\x9d\xc6\xd7\x04\x84\x4a\xe7\x54\x73\x07\x64\x54\xa4\x57\x47\x3c\xbb\x6a\xd1\xbe\x66\xf5\x19\x51\x04\x26\xc8\xbc\x02\x8f\xbf\xcc\xf4\x2b\xfb\x06\x62\xa2\xc8\x3c\xb2\xbf\x43\x5d\x08\x5d\x88\xa6\xae\xa0\x75\x4f\xd9\xe5\xa1\xc2\x92\x44\x68\x00\xfe\xf9\xeb\x05\x50\x85\x59\xe9\xd6\x2e\x85\x3b\x77\x85\xc0\x58\x1b\x22\x1d\xf8\x4a\x5e\x88\x08\x65\xed\x74\x9b\xba\x31\x8b\x10\x12\xc1\x8b\xbc\xe1\x04\xc6\x5f\x66\x7e\xfc\xad\x1e\xb6\x75\x71\x16\xe1\xdc\x42\x5b\x6d\xa8\xa4\x46\xa3\x55\x8b\x19\x9e\x95\x75\xa6\xd4\x54\xd6\x4e\x14\x98\x98\x22\x47\x21\x0f\x91\x48\x75\x78\xf4\x04\x50\x45\xc3\x83\x12\xb2\xcc\x87\x12\x7b\x32\x8e\x4e\xdb\x48\x6a\xaa\xf0\x3b\x67\x28\x03\x84\x8b\x27\xe0\x7f\x1f\x47\xe6\xf7\x06\xf5\xef\xb8\xb9\x52\xc9\x00\xb7\x64\x88\x75\x6e\xb1\x96\xdc\xaf\xb4\xf6\x17\x2e\x60\xb3\x42\x66\x73\x75\xb5\xa2\x2c\x91\xa0\xcf\x81\x2f\xfe\xbb\xea\x40\x93\x2d\x1d\xb2\x6a\x9d\xe8\xcf\x97\x13\xa0\xf1\x13\x58\xa4\x84\xdd\x98\x42\x94\xfe\x67\xdf\x62\xd4\xb6\xc1\x3c\x6f\x79\xb1\xff\x04\x96\x34\x4d\x31\x06\xba\x34\x6d\x2f\x9a\x00\xad\x1e\x9f\x2f\x27\x4d\x4e\xae\xf3\x68\x1e\x7a\x1e\x1f\x7c\x61\x54\x08\xcd\x3f\x23\xe4\xe6\x24\xe9\x46\xad\x0a\x94\x59\x69\x83\xde\xe9\xf8\x23\x08\x9e\x56\xad\x1e\xfe\xfc\x0e\x88\x60\x07\xfe\x40\x49\xc9\x23\x6a\x0c\x54\x1c\x37\xd7\xa1\x24\x9b\x6b\x0c\x73\x22\x58\xa5\xb1\x15\xb7\x1b\x8a\x0b\xb6\x2e\x05\x04\xd4\x36\x47\x53\x80\x61\x45\xb6\xd0\x46\x64\x59\xaa\xad\x6c\xb2\xbe\xae\xdd\x35\xae\x97\xf8\x0d\xbe\x41\xf6\x62\x98\x12\x91\x60\x8f\x52\x1a\xa0\x26\x23\x3f\x52\x46\xb3\x22\xeb\x22\x04\x06\x31\x2e\x49\x91\x2a\x73\xf6\x7f\x47\xc1\x2b\x94\x94\xa9\x67\xc7\x90\x51\x36\xff\xad\x20\x4c\x59\xa3\x56\x67\xf1\x47\xf2\xf5\x3b\x30\x93\xaf\x21\xe6\x67\x41\xc9\x6f\x34\xd2\x81\x66\xe8\xa2\xc6\x97\x53\x98\xd9\x3b\x8d\x20\x14\xad\x2e\x2f\xe0\x0f\x37\xcf\x86\xa4\x5a\xdc\x7e\xb6\x0f\xdb\xdb\xf3\x9a\xe1\xeb\x12\x78\x8e\xc2\x3a\x33\x9d\xb7\x5f\xbc\xef\x49\xf3\x3c\xaa\x8e\x3b\x95\xd6\x91\x51\x24\xf1\x45\xb1\x84\xea\xa4\x3d\xe7\x92\x2a\x2e\xb6\x4d\xd9\x25\x54\x05\xfe\xf6\xa8\xa5\xcb\x2b\x22\x57\x3e\x4e\xd1\x98\x22\x9e\x65\x54\x75\x61\xb1\x23\x2d\x69\x75\xb8\x33\x25\x10\xcd\x56\xa3\x14\x09\xb3\x66\x43\x7b\x80\x4e\xb4\x1a\x78\x6e\x0b\x5b\x35\x37\x3d\x1a\x69\x6b\x6b\x22\x45\xe3\x3d\x9a\x73\xcd\xcb\x79\x6c\xe7\x3d\xaf\xcd\xfb\x5c\x49\x38\xe1\xb6\xba\x6d\x02\xba\x2c\xa7\xae\xce\x16\xd2\xc0\x03\xfe\xbc\xa8\xe1\x99\xd8\x19\xa2\xf2\xac\xc1\xbc\xc8\x0f\x1a\xbf\x1a\xcc\xba\x4c\x89\xd2\x92\x03\xaa\x2c\x13\x2c\xa0\xad\xb0\x8f\x40\x14\xcc\xb4\x80\x05\x71\x8b\xc3\x98\xfb\x89\x65\x68\x51\x19\x04\xbf\xa5\x69\x23\x81\xed\xd0\x15\xb7\x9b\x5a\x10\xe5\x73\x1b\x27\xf4\xa8\xee\x9d\x0b\xd7\xb5\x66\x0c\xae\x2f\xa6\x7a\x47\x1d\x18\x94\xd0\x59\xd7\xe2\x84\x19\x46\x02\xd5\x7b\xdc\x4e\xed\x2e\xf5\xb9\x1a\x47\x11\xca\x5a\xe8\x27\x0d\xd4\xfc\x06\xb7\xf3\x46\x4a\x50\xe1\xb0\xb3\xde\xe3\xb6\xc4\x43\xfa\xf0\xd8\x01\x8d\xae\x5d\x70\xb6\x5e\xb4\x1f\x45\xe9\x66\x6d\x35\xee\xbb\xf8\xd2\xcc\x98\xeb\x11\x54\x9e\xef\xe4\x09\xc9\xf3\x2e\x66\x5c\x23\x23\x4c\xed\xd8\x80\xb2\x00\xcd\x8d\x5f\x12\x29\x37\x5c\xc4\x3b\x66\xe6\x1e\xa4\x55\x04\x2f\x16\x65\xdf\xd7\x2e\xee\x07\x60\x96\xf4\xe7\x5e\xb5\x4c\xca\x12\x45\xbc\x60\xca\x9e\x3a\x53\x96\xac\x95\xff\x9c\x4f\xb7\xe1\x76\x15\xb4\x0d\xf0\xeb\x09\xa4\x9c\xc4\xb0\x20\xa9\xb6\xf4\xe2\xa0\xc1\x60\x17\x5a\xdb\x06\xb0\xb1\x5b\xa4\xc6\xea\x49\x4a\x91\xa9\x69\x0c\x03\x72\x43\x4e\x0c\xe7\xcf\x0e\x42\xca\x23\x03\xd0\xc5\x6e\x3b\xd5\x6a\xa0\x9b\xee\xd9\xd4\x85\xc1\x2a\xa0\x3f\x54\xdd\xe1\xf4\xfb\xae\x70\xda\xec\xba\x19\x43\x3a\xdc\x29\x8f\xfc\x59\xbd\x6f\x18\xdd\xd4\xc0\xbe\x40\x7a\x77\x38\xfc\xfe\x3e\xe1\xf0\x23\x04\x28\xcd\xf5\x5a\x3e\x8e\x05\x85\x82\xce\x68\xad\x9e\x81\x36\x29\xb3\xa1\xcd\x4c\x11\x16\x13\x11\xcf\xcf\x8e\xe7\xeb\xe3\xdd\x01\xce\xf1\x0f\x0b\x70\x9e\xfd\xb0\x00\xe7\x79\x10\xe0\x74\x6a\x62\x90\xb9\x96\xca\xf8\x91\x44\x2b\xaa\x03\xfd\x8d\xc9\x2b\xb4\x87\x12\x54\x62\x4b\xb3\x4a\xe5\xb0\x48\xdc\x34\x83\x2b\xe2\x4c\x09\x9e\xce\xf3\x94\x30\x9c\x33\xd3\xc2\x16\x5a\x94\x47\x58\x42\x27\xaf\x28\x4a\xdc\x61\x85\x85\x4a\x90\x2b\x53\x7d\x5d\x68\xa5\x5b\x93\xb4\x40\x48\xe9\x0d\x02\xcd\x4f\x4c\xf3\xb1\xb9\x57\xf4\xbd\x4b\x04\xd6\x54\xa8\x82\xa4\x30\xbd\x1c\xe9\x61\x8f\x49\xdb\x4b\x6d\xa7\xec\x4d\x56\xd9\x4e\x0b\x51\x21\x15\xcf\x50\x48\x97\x5a\x9b\x16\x75\x1b\x43\x64\x05\x33\xb7\x6f\x3b\x0a\x43\x24\xa7\x73\x64\x71\xce\xa9\x31\xd1\x2f\xfa\x2b\x33\xbe\x54\xf0\x70\xc9\xcc\xe4\xea\x87\x8a\xa5\x81\xff\xaf\x29\x93\xaa\x54\xf5\x81\x2c\x30\xad\x5b\x6d\x6f\x86\x08\xa4\x7a\xf0\xf6\x12\x98\xd9\x78\xf7\x04\x3b\xd6\x88\xc6\x6a\xc5\x2c\xd7\x87\x51\x7e\x3c\xa0\x39\x5d\xd2\xd9\x3e\x23\x35\x4a\x0b\xa9\x39\x95\xd9\xa0\x65\x36\x7b\xd7\xe1\xbd\x4b\x90\x26\xd5\x2b\x2e\xd5\x8e\x79\x66\xb8\x19\x6d\x18\xa1\x76\xcc\xb1\x86\xca\x8c\x36\x83\x8c\x9b\x57\xb2\x4c\xa1\xca\xec\xd9\xea\x2c\x18\x9d\x1d\x5a\x4d\x32\x17\xf8\x54\x02\x67\xe9\x16\x88\xbf\xd9\xa7\x4b\xff\x71\x0b\xa6\xa6\x07\xc1\xf5\x6b\x0c\x7b\x02\x9c\x7a\x51\xd6\x48\x43\x96\xcb\x66\xee\x28\xd4\xf5\xbd\xa9\x0a\x6e\x92\xd7\x98\x7b\x8b\xac\x71\x7e\xfe\x2b\xaf\x7f\xaf\xbc\xbc\x18\xda\x5d\xba\xdd\x37\xd5\xb6\xaf\x16\x46\xe0\x3f\x84\x71\x9f\x47\x74\x9d\xfa\xaa\x4d\xc7\xb7\xc9\xb9\xd9\x95\x19\x74\xcd\xb5\xe6\x4b\xa4\x7a\x20\xe9\xef\x6f\xeb\xf7\x22\x32\x27\x11\xee\x42\x43\x59\x93\x12\x3b\x25\x14\x35\xcd\x34\xe1\x03\xba\x2c\x13\x72\x17\x53\x1c\x58\x5e\xba\xc6\xe5\xdf\x0a\xb2\x1d\x52\x3e\x92\x3c\xc3\xa4\xd8\xba\x96\xe2\x5a\xbc\x6b\x31\xbd\x86\xa3\x8a\xca\x20\xb7\xb6\x13\x4c\x73\xa9\xfd\x60\xcb\xb6\x15\x8f\xca\xb6\x42\xc5\x61\xb0\x3e\x1e\x1e\x1d\x0d\x9f\x9a\xc0\xab\x86\xbb\x4a\xba\x83\x7a\xad\x0c\x85\x50\x76\xa3\x1d\x6e\x68\xec\xdf\xfe\xec\x61\x67\x96\x3b\x54\xc1\x8a\xac\xb1\x0e\x6a\xef\x4d\x72\x41\xd7\x34\xc5\x04\xe5\xcf\x55\xc5\xc5\x7f\xd8\x64\xe0\x42\x8d\x2b\xd9\xef\x7a\x92\xa8\x0a\xdd\x99\xf3\x35\x16\xb1\x93\x65\xab\x90\xaa\x07\xe7\xac\xc2\x13\x56\xeb\xef\x7c\x43\xfb\xf2\xa1\x37\xb4\x3f\x3d\xee\x0d\xed\xab\x87\xdd\x9e\xff\x6d\xd7\xb1\x6b\x36\xb8\x10\x2b\xef\xaa\x3e\x26\x0b\x63\x95\x96\x45\xda\xae\x91\x41\x70\x6d\xe5\xf0\x4b\xd8\xa0\x40\xdb\xc2\x1b\xea\x56\x75\xd3\x57\xbf\xd2\xed\xe8\x32\x0f\x6e\xf3\x1f\xe3\x10\x1b\xea\x5a\x18\x9a\x37\x33\xce\xb8\xcc\x33\xc2\x92\x66\x2f\x91\xe9\x14\x9f\xa1\x52\x94\x25\x56\xe2\x6f\x91\xa1\xa0\x51\xd5\x47\x6e\x3b\xef\xc3\x83\x73\x67\xed\x7a\xfe\x50\xed\x7a\xf1\xb8\xda\xf5\xf2\x61\xda\xf5\xd3\x4e\x71\xfe\xd9\xea\xd5\x6e\xef\xff\xb3\xb5\x8b\x74\xab\xd7\xb9\xff\x18\xc3\xaf\xf5\x57\x52\xa8\x31\x14\x8c\xfe\x56\x20\x50\xf7\x1d\x71\xec\x72\x83\x66\x83\x5c\x57\x0b\xe2\x4f\x0f\xd3\xcb\x57\xbb\xf4\xe0\xcf\x56\xcb\x96\xfd\xe8\x6c\x01\x08\xab\x2d\xf6\xa3\x96\x0c\x99\xda\x99\xed\x34\xa7\xbb\xe8\x85\xbb\xf9\xb6\x1e\x58\x7d\xc9\xd9\xe8\x15\xed\x0e\x5e\x6a\x7d\x6a\x86\xda\xc6\xdd\x86\x67\xa9\x7b\x67\x86\x7b\x5b\x3a\x2c\x06\xd6\xa3\xee\xcf\x77\xcc\x71\xe1\x49\x77\xc4\xd2\xe8\xd6\x20\x02\x9d\x44\xed\x87\x25\x03\x86\x52\xc7\x05\x5b\x92\xa5\x70\x68\x86\x3e\xeb\xc4\x4f\x0e\xcd\x1b\x1d\x3f\x23\x53\xf2\xa0\x95\x19\xd6\xfd\xbf\x09\xd9\xc9\xd6\x94\x45\x79\xf5\xc5\xd5\xc0\xa4\x1b\x54\x24\x24\xcf\x75\xf0\xc1\xd3\xc2\x2c\x1b\x84\x58\x8b\xad\x42\x69\xc1\xe7\x1e\x83\xd1\xed\x5a\x05\xae\xc9\xc9\xc6\xb5\x75\xc5\x91\x4f\x57\x1f\xaa\xe0\xbf\x94\x49\xb3\x88\x56\xeb\xfd\xed\xc0\x62\x04\x55\x8a\xa2\xad\x57\xc7\x1d\x95\xac\x5b\x3e\xb4\xe9\x8e\xe1\x1f\x6c\x43\xfe\x9c\x5e\xc7\x8e\xce\x4c\x57\x29\x41\xa3\x59\x11\x67\x52\x13\xa8\x59\xa5\xa5\xe0\xa2\xeb\x8e\x93\xd9\x6a\xaa\xdb\xfd\xe9\x51\xe0\x9c\x08\x6b\xb6\x31\xba\x55\xfa\xbb\x18\x0d\xd9\xee\x48\xd8\x4e\x80\x9c\x4b\x49\x75\xa0\x6c\xff\xaf\x18\x8c\x6f\x3a\xc3\xe4\x72\x4e\xd3\x4e\xb5\xbe\x31\xfa\xaf\x78\x9b\xe2\xed\xe0\xbd\x41\xb2\xc1\xf0\x53\x08\xfe\xf3\x6d\x66\xeb\x5e\xce\xed\xe5\x0e\x29\x75\xfa\x36\x2a\x81\x04\x4e\xad\xbf\x2b\x3d\x40\xdb\xfc\xfa\x79\x67\xe7\xf2\x03\x19\xd8\xdd\x83\xf8\x60\x7d\x3a\xbe\xbf\x3e\x55\x6a\x51\x22\x8c\x56\x3a\x09\xb0\x73\x1a\x6d\x70\x6e\xe8\x3e\x2d\x70\xa3\x51\x8d\x91\xf5\x26\xb8\xe0\x76\xbb\x0e\xd5\x68\x82\x7b\xd9\x03\x77\x4b\x13\x5c\x0d\xb6\xde\x04\xf7\x37\x6f\xdb\x1f\x18\x5c\xd5\xfc\x56\x1f\x4d\x35\x36\x35\x0a\xdd\x1b\x84\x0d\x61\xca\xe6\xf0\x71\x57\x9d\x18\x76\x5f\x46\x90\x38\x2e\xab\xde\x8d\x46\x98\xde\x95\x04\x66\x7c\x8d\xb0\x14\x3c\xbb\xcb\x72\x57\x06\x3c\x5c\xd4\x22\x28\xd7\xad\x37\x65\x75\xb2\xa3\x7e\xa1\xf0\x28\xbc\x68\x54\x30\x7f\x28\x23\x66\x72\xf5\x40\x2e\xf4\xb1\xb0\x75\x76\xfa\x0a\xa7\xd0\x2a\x9e\x1e\x75\x2e\xd4\x49\xe2\x1f\xf7\x42\xd1\x79\xf8\x6a\x84\xde\xe9\xde\xb7\xd3\x01\xd5\xef\x7e\xeb\x02\x3a\xe7\x31\xc2\xa5\x36\xc0\xe7\x5d\x61\x18\x8f\x71\x9e\xeb\xd1\xe6\x4d\xa8\xbd\xa6\x34\xb9\x54\x24\x90\x48\x84\x45\xd5\x67\x64\x8b\xc7\x5a\x2b\xec\x9d\x7c\xf3\xb2\x93\x95\xb3\x63\xec\x9b\xed\x24\xec\x11\x94\x77\x9a\xbd\x0e\xe2\xd1\xdc\x4e\xcf\x77\xbd\xed\xbc\xbd\x99\x43\xb4\x5c\xca\xa3\x74\xbc\xde\x42\xd9\x63\x6f\xbb\xfd\xf9\xee\x0f\xdb\xf8\xad\x3d\x0a\xb7\x52\xf7\xdd\x9b\xff\xff\x00\x00\x00\xff\xff\x84\xf5\x77\xd4\xb4\x4d\x00\x00")

func apiProtoBytes() ([]byte, error) {
	return bindataRead(
		_apiProto,
		"api.proto",
	)
}

func apiProto() (*asset, error) {
	bytes, err := apiProtoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api.proto", size: 19892, mode: os.FileMode(420), modTime: time.Unix(1546560776, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"api.proto": apiProto,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"api.proto": &bintree{apiProto, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
