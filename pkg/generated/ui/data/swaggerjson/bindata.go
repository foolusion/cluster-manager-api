// Code generated by go-bindata. DO NOT EDIT. @generated
// sources:
// assets/generated/swagger/api.swagger.json
package swaggerjson

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _apiSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\xff\x6f\xdb\xb8\x92\xff\xbd\x7f\xc5\xc0\x77\xc0\x65\x81\xc6\xee\xf6\xf0\x80\x87\x1e\x0e\xef\xf2\x92\xbe\x3e\xa3\x6d\x1a\xc4\xfd\x82\x87\xeb\xc2\xa0\xa5\xb1\xcd\x8d\x44\xaa\x24\x65\xaf\xf7\xd0\xff\xfd\xc0\x2f\xb2\x25\x59\xb4\x65\x29\x89\x95\xd6\x0b\x2c\x1a\x4b\xd4\x70\x66\x38\x24\x3f\x9c\x19\x92\xff\xf7\x0c\xa0\x27\x97\x64\x36\x43\xd1\x7b\x05\xbd\x97\xfd\x17\xbd\xe7\xfa\x19\x65\x53\xde\x7b\x05\xfa\x3d\x40\x4f\x51\x15\xa1\x7e\x7f\x19\xa5\x52\xa1\x80\xf7\x84\x91\x19\x0a\xb8\xb8\x19\x9a\xf2\x00\xbd\x05\x0a\x49\x39\xd3\xa5\x16\x2f\xfa\x19\x21\x80\x5e\xc0\x99\x22\x81\x5a\x53\x03\xe8\x31\x12\x1b\x72\x23\x12\xcb\x94\xcd\xe0\xf2\xfa\xf2\xa3\x2b\x0e\xd0\x4b\x45\xa4\x5f\xce\x95\x4a\xe4\xab\xc1\x60\x46\xd5\x3c\x9d\xf4\x03\x1e\x0f\xa4\x2d\x7f\x1e\xb0\x40\x0d\x02\xcb\xcb\x79\x6c\x79\x39\x27\x09\xdd\xd0\xc0\x98\x50\x43\x85\x84\x31\x65\xff\x93\xff\xb0\x4f\x79\xcf\x14\xfb\xfe\x0c\xe0\xbb\x91\x56\x06\x73\x8c\x51\xf6\x5e\xc1\xff\x5a\x9e\x4d\xdd\x99\x00\xfa\x87\xfe\xe2\x37\x53\x36\xe0\x4c\xa6\x85\xc2\x24\x49\x22\x1a\x10\x45\x39\x1b\xfc\x2e\x39\xdb\x94\x4d\x04\x0f\xd3\xa0\x66\x59\xa2\xe6\x72\xa3\xf2\x01\x49\xe8\x60\xf1\x6b\x26\x65\x5e\x7b\x33\xcc\x2b\x53\xb3\x9f\xc6\x31\x11\x2b\x2d\xee\x17\x1a\x45\x20\x50\x09\x8a\x0b\x04\x35\x47\x90\x8a\xa8\x54\x02\x9f\x02\x01\x47\x0c\x08\x0b\x81\x2a\x09\x77\xe9\x04\x03\xce\xa6\x74\x06\x53\x2e\x20\xe0\x8c\x61\xa0\xe8\x82\xaa\xd5\x5a\x95\x00\x3d\x9e\xa0\x30\x2c\x0f\x43\x5d\xc7\x1b\x54\xce\x0e\xf2\x85\x04\xca\x84\x33\x89\xb2\xc0\x1b\x40\xef\xe5\x8b\x17\xa5\x47\x00\xbd\x10\x65\x20\x68\xa2\x9c\xc5\xe4\x08\x59\x89\x74\x83\x90\xad\xcf\x00\x7a\xff\x2e\x70\xaa\xbf\xf8\xb7\x41\x88\x53\xca\xa8\xa6\x20\x33\x2d\x8d\x9d\x2d\x8c\x49\x42\x37\x5c\xde\x62\x12\xad\x7a\x05\x42\xdf\x9f\x55\xfd\xfd\x3d\x27\x4e\x42\x04\x89\x51\xa1\xd8\x34\x9e\xfd\xaf\x24\x48\x66\xca\xe6\xdf\xe7\x3b\x85\xbc\x26\x31\xea\x76\xd0\xad\x92\xb5\x84\xe2\x30\x41\x88\x38\xbf\xc3\x10\xd2\xa4\x5f\x26\x41\xcd\x97\xdf\x52\x14\xab\xf2\x2b\x81\xdf\x52\x2a\x50\x37\xc9\x94\x44\x12\x4b\xaf\xd5\x2a\x31\x8c\x49\x25\x28\x9b\xe5\xc5\xff\xfe\x7c\xbf\x38\x64\x29\xfb\x12\x03\x81\x6a\x7c\x87\xab\x31\x0d\xf7\xc8\xf6\x71\x8e\x30\x32\xe5\xdf\xe2\x6a\x18\x1a\x73\xba\xb8\x19\xc2\x45\x10\xa0\x94\x5d\x14\x8b\x18\xce\xb4\x74\xb5\x45\xb3\xc2\xbc\xc5\xd5\x5a\x3c\xd2\x3d\xf1\x04\xce\x34\xe3\xfb\x65\xba\x35\x05\x3b\x2b\xca\x9f\xa9\xc0\x3e\x49\x92\x7a\xb6\x77\x91\x24\x1d\xb6\x3a\x23\x8b\x42\x46\x98\xaa\x21\xcb\x47\x53\xb0\xdb\x0d\x93\x10\x29\x97\x5c\xd4\x69\x9a\x1b\x57\xb4\xdb\x02\xc9\x74\xb2\xe6\xbc\xe6\x70\x97\xfb\xa2\xab\xb2\x25\x82\x2f\x68\x58\x98\xa8\xab\xc4\xc9\xcf\x4c\xd9\x27\x12\xce\xc8\x52\x0e\x8c\x76\x06\x8b\x78\x49\x04\x0e\x50\x05\xbf\x3c\x9c\x6c\xa5\xb7\xc8\xd2\xb8\x34\xf7\x9a\xe7\x29\x33\x33\x3f\x96\xdb\x08\xcc\xf8\x57\xf1\x50\x4b\xb0\xfd\xd8\x8a\x54\x84\x05\xbf\x6d\xa9\x69\x4a\xd2\x48\xa3\xad\x5c\xad\x95\xd0\x21\xf7\x65\x4f\x91\x59\x19\x34\x64\xc0\x79\xf3\xf1\x6f\xee\xaf\x75\x2b\xf6\x42\x8c\x50\xe1\x6e\x64\x67\xcb\x6c\x90\xdc\x0e\x94\x76\x65\x8a\x3e\x01\xa0\x56\x60\xb4\x2b\x58\xed\xcb\x9c\x28\xa0\x32\x8f\xd5\xfe\x43\x82\xfe\x50\x43\xb6\x10\xa5\x12\x7c\xd5\x99\x6e\x7e\x42\x6b\x27\xb4\x76\x5c\x51\x4e\x68\xad\xcb\x0d\x73\x42\x6b\x27\xb4\x76\xdf\xb2\x3d\x41\xb4\x56\xa3\x09\x02\x12\x45\x13\x12\xdc\xf5\x53\x11\xd5\xb0\xaa\x4f\xb7\xef\x34\x1e\xd0\x5f\x81\xfe\x0c\x14\xef\x8c\x35\xad\x45\xd1\xb5\xa0\x54\xf5\xfa\xc9\xf0\x2a\x33\x2d\xf7\xd9\xe3\xc8\x73\x9f\x40\x3a\xe1\x72\x8f\x83\xd4\xf4\x1a\xa9\x47\x82\x3a\x48\xfa\x52\x20\x79\x12\x48\xba\xc0\xe8\xa3\x20\xe9\x09\x0f\xb7\x8c\xc0\xda\x47\xd5\x9b\x9c\x79\x28\x91\x96\xad\xe3\xbe\x15\xf0\x5e\xce\xea\x88\x7f\x1f\x06\x97\xee\xb1\x37\x12\xfe\x9e\x4a\x05\xe4\x40\xc3\xbb\x30\x9f\x39\x06\xae\x79\x88\xb2\xcb\xd6\x57\xe0\xf6\x67\xb4\xbe\x82\x02\x1e\xdc\xfa\x9e\xe5\xb4\x57\x8e\x16\x0d\x22\x5a\x18\x02\x0f\x08\x19\x11\xd0\xdf\xea\x39\xc0\xd1\x92\xb5\x22\x41\xef\x74\x85\x1d\x36\xce\x22\xa7\x8f\x62\x9d\xa7\x45\xf9\x69\x51\x7e\x5c\x51\x4e\x8b\xf2\x2e\x37\xcc\x69\x51\x7e\x5a\x94\xdf\xb7\x6c\x4f\x70\x51\xfe\xd0\x50\x28\x4d\x66\x82\x84\x78\x28\x1a\x4a\x05\x03\xf7\x29\x70\xd3\xca\xd2\x58\x28\x81\x19\x5d\x20\xab\x81\xde\xdf\xa0\xfa\x64\x09\x38\xce\x87\x6c\xca\x45\x6c\x4a\x74\x1c\x2a\x79\xf9\x7e\x14\xe0\x74\xea\x71\x47\x77\x83\x9d\xb0\xeb\x09\xbb\x1e\x57\x94\x13\x76\xed\x72\xc3\x9c\xb0\xeb\x93\xc0\xae\xcd\x12\x1d\x40\xe9\x67\x4b\x04\x22\x10\x02\xce\xa4\x9e\x59\x29\xb3\x39\xc2\x0e\x13\x3d\xc1\xa8\xc0\x5e\x27\xad\x52\x18\x27\x0a\x14\x5f\x03\xbf\x3a\x4e\xda\x22\x56\xea\x32\xb0\x2b\x72\xfa\x33\x7a\x68\x8b\x1a\x38\x92\x8b\x56\x60\x88\x4c\x51\x12\xc9\x81\x86\x7e\xb9\x75\xc9\x5e\x13\x4d\x93\x90\x28\x04\xb2\x94\x90\x23\x03\xa9\xc4\xd0\x2d\x4e\xea\xd8\xab\xa6\x71\xf1\x65\x74\xb9\xa1\xd0\x6d\xab\xdd\xe6\xf7\xe7\xb4\xdd\x6d\x3d\x74\xc0\x82\xcd\x3a\xa5\x89\x0d\xeb\x0f\x5b\x5b\xb1\x26\xf2\xb4\xec\xb8\xc4\xf1\x4f\x6c\xc9\x25\x4d\x1c\xc7\x96\xe7\x18\xc5\x79\xf3\x3d\x20\x09\x37\xc4\x24\xe2\x2b\x0c\x41\xd3\x80\x60\x4e\x84\xda\x61\xb0\x36\xcb\xf5\x9f\x18\xc5\x97\xe5\x92\x5d\xb3\xd4\x12\xab\x8f\x62\xa2\xdb\x3d\xbe\x4a\xd8\x6c\xfb\xa1\xa2\x51\x84\x02\xe4\x9c\xa7\x51\x08\x13\x04\xca\xa4\x22\x51\x84\x21\x70\xd6\x19\xf4\x9d\x90\xe0\x8e\xcc\x30\x53\x6d\x1d\x20\xbe\x25\x98\x1e\x14\x3b\x23\x50\xd9\xc6\x2b\x9b\x48\x97\x81\x6b\x12\x3f\xd2\x12\xe1\xe4\xcc\x3a\x39\xb3\x4e\xce\xac\xc7\x96\xe5\xe4\xcc\xea\xb2\x40\x3f\xa6\x33\xeb\x14\x16\x3a\x7a\x58\xa8\x76\x26\xf1\x05\xa4\x8c\x7e\x4b\x11\x68\x08\x8a\x03\x65\x21\x0d\xf4\xaa\x4f\xcd\xa9\x7c\xdc\xc4\xe2\x3a\xb0\xe6\x94\xf3\xfd\x13\xe4\x7c\xbb\x25\x02\x9c\x71\x01\x02\xdd\xaf\x5f\x72\x8b\xb7\xaf\xec\xa3\xb6\xce\xa5\x2e\x3c\x41\xbb\xc7\x2f\x0d\x14\x5d\x20\x50\x73\x78\x86\x41\xb6\x73\x22\x81\x44\x02\x49\xb8\x82\x09\x22\xdb\x2c\x03\x97\x54\xcd\xed\x89\x1b\x7a\x04\x2a\xb9\xde\xcb\xcb\xc1\xa1\xad\xff\x49\xac\x07\xcb\xbc\xfe\x8c\x3e\x8b\xb2\x0e\x8e\xe3\xad\xb0\xcb\xc3\x82\xbb\xad\xa9\xdd\x3b\x52\x7e\x0b\xbd\xc9\x52\xd5\x3f\x6e\x95\xec\x9a\x81\x96\x58\xfd\x19\xed\xb3\xa4\x82\xe3\x98\xe7\xe6\x08\xa8\x83\x53\xad\xdc\xa7\x40\x37\xb9\x46\x40\x26\x3c\x55\x40\x12\x0a\x12\xc5\x62\x5f\xae\xd5\x67\x4b\xe1\xe9\x24\x59\x39\x86\x1b\x59\x6b\x93\xc6\x5a\x9f\x76\x95\x63\x6d\x73\xde\x54\x79\xf3\x42\xe1\xf7\xc5\xdb\xd1\x28\xc1\x20\xdf\xb0\xd9\xbc\xce\x27\xbf\x63\xb0\x99\xbe\x34\x4a\x4f\x50\x28\x5a\xd2\x74\x2f\xe7\xe9\x2f\x37\x41\xfd\x0d\x16\x7e\x77\x7f\xe1\x90\xb2\x5c\x50\x41\x71\x98\xa4\x34\x0a\xf3\xf1\xed\x5e\xa5\x4a\x19\x0f\x71\x9c\x70\x1e\x95\xd9\xdb\x81\xec\x37\x75\x5e\xf3\x10\xe1\x86\xf3\xc8\xb8\xbe\xaa\x6b\x20\x61\x38\x0e\x78\xca\x94\xaf\x06\xca\x14\x96\x1d\x85\x3d\x6b\xce\xee\xf5\x7f\xbe\xf4\xd4\x9f\xc6\x13\x7b\x9a\x14\x65\x81\x40\x22\x11\x26\xab\x6a\x2e\x04\xc6\x7c\x81\x0f\xc6\x08\x5b\x73\x12\x62\x15\x27\x95\x03\xc8\x4e\xe3\xfb\xfc\xfe\x0b\x11\xd8\xd6\xfe\xb4\xf2\x99\xd9\x42\xe5\x91\x99\x08\x41\x8a\xe3\x76\x8f\x2a\x8c\xcb\xe5\x0f\xb1\x57\xcb\xf9\x7b\x12\xcc\x29\xb3\x02\xf8\xe0\xfc\x46\x7f\xae\xb4\x84\xe5\x9c\x06\x73\x58\x22\x2c\x09\x33\x49\x09\x24\x34\x6b\xa9\xbd\x86\xec\x1a\xf8\x41\x85\x2d\x37\x98\x95\xf4\xd6\xd4\x7c\x5f\xf2\x5a\x39\x60\x2a\x78\xec\x11\xba\x96\x2d\xf9\x58\x6b\x61\x4b\xf3\x32\xe8\xaa\x3b\x4a\xe8\xc5\x96\xfe\xd8\xb8\x58\x46\xa3\x7f\x3a\x17\xcb\x3e\x91\x0a\xdb\x1a\xdd\x58\x7c\xf1\x76\x64\x30\x29\x0b\xf0\x8d\xe0\x69\xd2\x46\x1e\x87\x69\x9a\xc9\xc3\x72\xfe\x96\x99\xe1\xa4\x7a\xc6\xb2\xf4\x0e\xaf\x23\x93\x12\x74\x69\x38\x1b\x29\xc2\x42\x22\xc2\xf1\xd5\xcb\xf1\xe2\xe5\x73\x40\x15\xf4\x7f\xa9\xae\x32\xa6\x6c\xfc\x2d\x25\x4c\x51\xb5\x7a\x80\x91\xee\x3d\x65\x34\x4e\x63\x70\x23\x1e\x9f\x5a\xa8\xcd\x02\x94\x70\xe6\xbc\x2d\x66\x02\xfa\x13\x05\xf7\xb1\x48\xfe\x78\x50\x16\xc9\x1f\xcd\x58\x7c\x56\x62\xb5\xa2\x39\x4c\x5b\x4b\xb0\x9e\x24\x20\xb6\x79\x08\x0b\xab\x2a\xeb\xed\x30\xe7\x2f\xd6\x9c\xbf\x8c\xae\x88\x22\x97\xc8\x4a\x87\x5d\x1e\x6a\xcb\x2e\x64\xd0\xc4\xd2\xbe\x98\x11\xc8\x12\x80\xb3\x54\x9e\x23\x91\xea\xfc\xd7\x9d\x36\x46\x16\x84\x46\x64\x42\x23\xaa\x56\xe3\x3f\x39\xbb\x8f\x21\xb7\xa6\x0b\xa8\xcc\x78\x9e\x15\x30\xac\xe4\x84\x98\x3c\x87\xec\xef\x97\x81\xf9\x7b\x89\xfa\xef\x70\x5b\x3a\x7f\xdb\xdb\x7a\x74\x3b\x81\x6b\xa8\x3a\xed\x7a\x6f\xc3\xd4\x7d\x0d\x21\xf1\x5f\xfa\x11\x11\x33\x3c\x0d\x1e\x3f\xce\xe0\x71\x23\xdc\x41\xb6\xa9\xc0\x70\x58\xea\x57\x07\x5b\xda\x22\x09\xc6\x34\x6c\x3c\x25\x7e\xbe\xb9\x04\x1a\x3e\x87\x49\x44\xd8\x9d\x99\xeb\xf5\xff\x5f\xf5\x1a\x88\x28\x04\xce\xd0\x3c\x58\xf1\xf4\x6b\xef\x39\x4c\xa9\x49\x5c\xa0\x53\xfd\xc0\xe4\xdc\xfe\xfd\x5f\x1f\x34\x8d\xea\x56\x97\x18\xa4\x42\x8f\x36\x46\x87\x4d\xd9\x1c\x39\x2a\xbb\xa6\x6c\x4a\xe2\xb1\xe0\x11\x8e\x89\x68\x36\xa0\x1a\xdf\xf2\xc5\x7b\xd0\x44\x8c\xc4\xf9\x24\xe3\x33\x22\xd8\x2f\x59\x3b\x4a\xc9\x03\x6a\x16\xed\x61\x58\xcb\x92\xfe\xc1\x05\x2c\xe7\xc8\x40\xf2\xd8\x84\x15\xd8\x4c\x1a\xdd\x65\xbe\x59\xab\xeb\xb0\x68\x3c\x6f\x90\xa1\xa0\xc1\xda\x8b\x97\xb9\x33\xb9\xa4\x8a\x8b\x55\x1b\x93\xb1\x87\x56\x37\x99\x74\x36\xf9\xd7\x9f\x6e\xdf\x6d\xd4\x64\xbc\xcd\x02\x13\xee\x59\xae\x36\xc5\x6c\xf9\x0a\x35\x79\xeb\xa9\xde\x83\x40\x4b\xee\x8a\x0a\x5f\x4b\x0b\xd5\xcd\xa8\x1a\x6f\xbb\x8e\x0e\x33\x33\x45\x66\xc0\x99\x05\xa1\xd4\xea\xcd\xb5\x69\xa5\xf6\x74\x95\x01\x8f\x63\xda\x02\xc7\x13\x39\x5f\xe3\x5e\xaa\xc0\x91\xf3\x56\xa7\x04\xe2\x58\x2a\xa2\x9a\x36\x1b\xaa\xb9\x1e\x19\x05\x30\xae\x4c\xad\x9a\x22\x2c\x89\x84\x20\x42\xc2\x6c\x77\x98\xa4\x34\xf2\x30\x61\xfc\x20\xe3\xb0\x29\x03\x57\x66\xe8\x9a\x5a\x77\x8a\x47\x4c\xde\xaa\x1d\x9d\x55\xe9\x4a\x66\xdc\xa6\x83\x2a\xae\xf5\x9a\xd0\xc8\xe3\x52\x71\x2f\x45\xa3\xfa\x2e\xdd\xc7\xa6\xaa\x6a\xfa\x49\x44\x94\xb6\xf1\x46\xf4\x6f\xdc\xc7\x40\x95\x6d\x26\x5b\x9f\x4d\x1e\x18\x80\x48\x19\xa3\x4c\x9b\xed\xbe\xde\x57\xe5\x0a\x2b\xe6\x6f\xb7\xe8\x7d\xc5\xcc\xa8\xa6\xbd\xc1\x9f\x2f\xe5\x9d\xc5\x4a\x89\x4b\xed\x6a\xf6\xa5\x33\xf9\x5c\x24\x8d\x17\x09\xde\x6c\xa3\x5a\xd3\x96\xfe\x3a\x28\xba\x27\x53\x69\xe7\x46\x33\x61\x69\x7b\xd8\xf2\x75\xec\x32\x83\xf2\x91\x33\xc7\xf0\x02\x34\xdc\x42\xe4\xe9\x71\x59\x96\x47\x53\x27\xf1\x4d\x55\x9a\x48\xce\x51\x7b\x40\x7a\x88\x67\xc9\xb7\x6c\xe1\xc1\xf6\x6d\xbb\xc8\xb3\x78\xf1\x65\x04\xf9\x52\xd5\x5c\x94\x12\xef\x77\xf0\x51\xcb\xb5\xef\xb7\x76\xcd\x8e\x4c\x30\xa0\x53\x77\x71\xc5\x57\x56\xa4\x60\x41\xb8\xd9\x95\xf2\xdf\xf0\x97\xff\xaa\xe6\xd7\xa5\xa8\xb4\x67\x38\xe7\x0e\xae\x9e\x12\x5c\x0a\x44\xe3\x36\xba\xcc\x08\x78\x66\x0d\xf7\x3a\x1f\xaa\x6a\x32\x80\x6f\x9f\x96\xd5\xa2\xef\xf2\x2d\x71\x33\x0a\x13\xce\x35\x3a\xf0\x2d\x00\x2b\x5f\x6f\x7a\x36\x91\x36\x65\x87\x80\x4c\xcd\x28\x37\x4d\xa3\x2c\x49\xa4\x89\xd0\xe5\x00\x4e\x1b\x87\x7e\xd2\x78\xf1\xe3\x4b\xb2\xf4\x78\x2e\x6d\xae\x63\xd3\x8a\x2a\x33\x20\x3d\x63\x5f\x96\x88\xd8\xb4\x2e\x4f\x7a\xa2\x67\x0a\x2e\x65\x09\x36\x9e\x80\xfd\xb9\x83\x47\x99\x13\x2f\xb7\x07\x80\x47\x5b\xcd\x79\xf2\xc3\x7c\x28\x64\x9d\xa3\xd5\x78\x75\x5d\xce\xdc\x6a\xd0\x29\xdd\x18\x74\x85\x8a\xd0\x68\xa8\x30\x6e\xa3\xb8\x86\xb2\x6c\xe4\xd8\x1d\xa3\x6d\x0a\x51\x2a\xae\xde\xf1\x74\x0a\x73\x5b\xd2\x38\x46\x29\xc9\xac\x59\x5d\x17\x61\x68\x26\x17\x12\x55\x64\x33\x14\x6f\x64\xda\xcb\xce\xe6\x82\xa6\xd6\xc8\x2c\x77\xd7\x93\x59\x55\x99\xab\x9e\x6a\x05\x14\x2d\xbf\xcd\xe7\x53\xfb\x68\x64\xa9\xf8\x6d\xf9\x00\xb5\x4c\x90\x08\x14\x8a\xdf\x61\x53\x4f\xff\x46\x2f\xe6\x82\x30\xb0\x14\xc1\x92\x6c\xdc\x87\x4e\xbd\xa7\x53\xbd\xa7\x23\x86\x7b\xa0\x11\x8d\xca\x5c\xfb\x14\xb7\x9d\x55\xde\x1b\x7d\xbc\xf8\xf8\x69\x34\xfe\x74\x3d\xba\x79\x7d\x39\xfc\xc7\xf0\xf5\x55\x3e\x09\xea\xe6\xf6\xc3\xe7\xe1\x68\xf8\xe1\x7a\x78\xfd\x26\xff\xfc\xf6\xd3\xf5\xd6\xa3\xd7\x97\x1f\xae\x2f\x87\xef\x4a\x8f\x47\x1f\x3f\xdc\xdc\x94\x9e\xbd\xbe\xbd\xfd\x70\x9b\x7f\x70\xf5\xfa\xcd\xed\xc5\xd5\xeb\xab\x4c\x05\xeb\x2c\xb3\x7c\x0e\xfa\x0e\x4e\x37\xda\x3d\x87\xed\x62\xaf\xe0\x9a\x2b\x90\xa8\xbe\x32\x38\x87\xbc\x48\xaf\xc0\x60\xa0\xdc\x13\xd3\x34\xb8\x4e\x3f\x2f\x2e\x51\xa9\x84\x09\x6a\x70\xe1\x5c\xc5\x7d\x43\xd0\xe9\xc2\xd2\x72\x3f\x76\x92\x99\x13\x69\x13\x81\x1d\x19\x7b\xb9\x9e\x84\x69\x1a\x45\x2b\x48\x25\x99\x44\xe8\x48\x6f\x74\xea\xc8\x6f\x1e\x54\x54\x41\x94\x75\x6e\x2f\xb9\xb8\xd3\x04\x89\xc9\x45\x8e\x56\x8e\xeb\x90\x33\xcc\x5c\x9e\x8e\x97\xe7\x1a\xa5\xcf\x81\x48\xb7\xc4\xce\x90\x53\x4c\x0c\xa7\xc6\x75\x18\x22\x48\x3e\x55\x7a\x31\x66\xb9\xca\x9a\xd4\xb2\x94\xfd\xaa\xa7\x39\xbb\x13\x36\x34\x74\x8c\x19\x58\x22\xe6\xcf\x9d\x14\x62\xb2\x32\xbb\x1b\x99\xd5\x8f\x21\x90\x99\x8d\xa5\x91\xfd\xda\x49\xc6\xa5\x55\x9a\xbd\xe3\xc2\x28\x48\x2b\x84\x83\x40\xa9\xb8\x40\xd3\x06\x30\x4d\x59\x60\x47\x14\xaa\x56\xfb\xd1\x63\x45\xae\x45\x9b\x21\x3d\xe2\x41\xd9\x41\x5e\x7f\x30\x34\x0b\x15\xb3\x51\x7e\x2b\xe8\x5a\x1e\xeb\x3a\x9f\x5f\x97\xc5\xf3\x6c\xdc\xea\xc1\x32\x93\x6a\xe5\xca\xe4\x08\x79\x42\xea\xa5\x48\x65\x93\xd1\xbc\x22\x50\xd9\xc6\x90\x42\xa2\xc8\x38\x28\xe7\x47\xd4\xd6\x44\x55\x9a\xc5\x6e\x9f\xcf\xe3\x98\x5c\x1d\x87\x58\x33\x83\x13\x28\x79\x2a\x82\xed\x8c\x8c\x83\xd4\x55\x11\x58\xae\x66\xf2\xef\xff\xfa\x00\xd6\x52\xbb\x63\xfe\x9e\x1c\x8c\x47\x37\xff\x63\x79\xa6\xfd\x37\xae\xae\x0f\xe2\xf7\x46\x7e\xda\xfa\xa1\x0b\x0a\xc8\x9c\xd2\x7b\x5c\xad\x59\xa5\x45\x7f\xeb\x93\xf6\x73\xfa\xd5\x70\xec\x50\xc5\x5a\xd9\xe7\x10\xa4\x42\x20\x53\xd1\xca\x7a\x3b\x35\xd8\x5a\x4a\x8d\x97\x62\x42\x3c\xfd\xf9\xee\xaf\xb2\x75\xd0\x7a\xb1\x09\x78\xbe\x4d\x27\x28\x18\x2a\xf4\xb9\xfb\x5b\x04\x1d\x2a\x67\xa2\x03\xfc\xfd\xad\x03\x10\x75\x61\x56\x65\x3d\x87\x04\x0e\xf6\x55\xb4\x2f\x76\x30\xa7\xb3\xf9\x38\x9f\x47\xf7\x30\x5e\xf5\xed\x50\x7e\x0e\x59\xff\xf3\xc2\xb3\x7a\x47\xa5\x57\x02\xe3\x29\x99\x08\x1a\x34\xb6\x39\xfb\xb9\x1b\x05\x4b\x81\xef\x46\x7d\xba\xb3\xb1\x0b\xbf\x96\x97\x44\xe6\x27\x00\x98\xac\x0a\x1b\x93\x3d\xe3\xad\xc3\x1a\x2d\xbd\x09\xc6\x45\xe4\x6f\x9e\xd0\x78\x61\xcb\xce\x84\x8c\x33\xc8\xb6\x31\xb5\x6d\xb4\xfb\xd9\x53\x11\x70\xa6\x04\x8f\xc6\x49\x44\xd8\x03\x6f\x38\x78\x98\xdd\x15\x01\x8f\x13\x41\x25\xee\x07\x93\xba\xeb\xa1\xf8\xb1\x65\x24\x09\x1d\x23\x0b\x13\x4e\x1b\x87\xbb\xa8\xcc\x9d\x5d\x44\x60\x41\xa2\x14\x21\xa2\x77\x08\x34\x79\x95\x70\xa1\x5c\x62\x80\xdb\x63\x4d\x60\x41\x85\x4a\x49\x04\xc3\x9b\x81\x7e\xfd\x95\xdd\x10\x29\x75\x97\xb4\x81\x13\xc0\x3f\x14\x0a\x46\x22\x08\x52\xa9\x78\x8c\x42\xba\xa1\x8b\x4c\x22\x74\xe9\x41\x71\xca\xdc\xe9\x02\x3e\x67\x76\xdd\x3e\x52\x71\x15\x6d\xf7\x06\xb6\x4b\xa3\xdf\xfc\xe8\x90\xed\x56\xe7\x2b\x1f\x9a\xad\xf6\x84\xd6\xcb\x14\x2d\x78\x37\x9b\x87\x99\x2a\x4f\x15\xeb\x9e\x76\x6d\xc8\x1b\x61\xbd\xc1\x34\x17\xf9\xf6\xa4\x61\xb7\xf0\x76\x1b\x3c\xea\x08\x48\x58\xa2\x40\x7b\xbd\x40\x03\xfd\x96\x73\x5b\x8f\x8e\xaf\xf3\x1b\x83\xec\x21\x09\x31\x32\xcf\xe4\xaa\xcb\xca\x84\x04\xf7\x53\xab\xa1\x64\xb7\x20\xea\x6a\x6d\x98\x27\x49\x22\x87\x67\x77\x04\x64\x13\x5e\x6f\x7e\xdf\x97\x48\xbc\x9f\xcf\x4d\x7e\xef\xae\x3c\xd5\xa0\xd4\x92\xcd\x74\x62\xeb\x62\xde\x8d\xa9\x6d\xd6\x31\xdb\xf5\x64\xd4\xaa\xab\xd2\x33\x42\xb3\x81\xc8\xd4\x44\x04\xba\xee\x69\xaf\xe4\x38\x63\x28\x15\x86\xb0\x22\x71\x04\xe7\xe6\xd5\x67\x53\x45\xdf\x3c\xd1\x08\x05\x99\x92\x9e\x54\x2e\xc3\xf0\x38\x21\xab\x88\x93\x83\x42\x6f\xb9\xd1\x64\xa5\x70\xd7\x8a\xde\xd2\xd6\xfd\x20\x3b\x41\xe4\xcc\x9c\x71\x4a\xc5\x8c\x24\x09\x86\x20\x79\x94\x1a\x59\xcc\x76\x94\xaa\x7d\x14\xfb\x7b\xbe\xda\xba\xdb\xac\x7b\x03\xeb\xb0\x14\x43\xb0\x91\x0b\xb9\x92\x1a\x10\xef\x42\xdc\x8f\x89\xb7\xf2\x20\x7d\x3f\xd2\x7a\x57\xbe\x29\xaf\x4d\xdb\xfd\x70\xed\xd6\x76\xa5\x94\x4b\x48\x69\xa4\xd7\x3d\x97\xd8\x74\x4f\xd3\x97\x84\x95\x61\x9d\x4b\x95\xf5\xa0\x3a\x37\xd2\x1e\x67\xcb\x21\x59\x8f\xf4\x76\xe3\x4d\xc2\xa5\xa4\x1a\x94\x0b\x3a\x9b\x2b\x60\x7c\xd9\xac\xd9\x0a\xc7\x62\x74\xaf\x91\x86\xd3\x1c\x34\x5c\x12\x09\x1f\xde\xee\x6c\x9c\x31\xad\xdc\x24\x03\xbb\xb0\xc5\xbe\xbd\x36\xd5\x9c\x65\xdb\x27\x86\x3b\xfd\xb5\xdb\x41\x76\x53\x8b\x49\xb7\xcb\xfc\x91\x05\x90\xbf\xa3\xb5\xaa\x0e\x45\x6a\xe3\x4e\xa8\x1e\x37\xea\xed\xe5\xc8\xbc\xfb\xbb\x4e\x06\xf6\x65\x5d\xae\x8f\xe9\x9d\x35\xac\xdd\x7f\x76\xef\x01\xb0\xee\x80\xb3\x63\x4a\x48\xdf\xa3\x12\x83\x36\x46\xa8\x14\x65\xb3\x07\x70\x2b\x1f\x25\x97\xbd\x79\xd4\xda\xc6\xd1\xf7\xf2\xd2\xfd\xfd\x07\x4f\x24\xf0\x53\x7d\x6a\x5c\xf7\x06\xf4\x27\xbb\xe0\xdf\x84\x8c\xde\x91\x09\x46\x47\x59\xef\xe7\x0f\x00\x21\x10\x19\x3e\xfc\xeb\xbe\xe6\x81\x32\xe3\x47\xac\xac\xa3\xae\xb6\x6e\xb6\xfb\xf5\x01\x79\x75\x55\xe7\xb4\x96\x4e\x68\xdd\x3a\x9b\xb5\x74\x2a\x6b\x65\x16\x5c\xe9\x24\xd6\x7d\xfc\x17\x0f\x78\x3b\x76\x44\xdd\x4d\x78\x03\x70\x33\x28\x64\x07\xdd\x1f\xb2\x2a\x78\xe8\xd9\xbd\x9d\x67\xe9\x7a\xe3\x4d\xf2\x57\x4d\x3d\x55\xd3\xb8\xe9\x28\x61\xbe\x84\x33\x3a\x5d\x87\xae\x9c\xcd\xfc\x62\xf7\x87\x5b\x5e\xce\xbe\xa5\x64\xd5\xa7\x7c\x20\x79\x8c\xb3\x74\xe5\x8e\x87\xf4\x4c\x1b\xf7\xb4\x33\xd7\xd6\x61\xee\xcd\xb0\xc7\x8d\xd9\xd3\x25\x07\xeb\x3b\xb3\x14\x87\xb3\xc5\xcb\xfe\xaf\xbf\xf6\x5f\x6c\x79\x34\xb6\xcd\x61\xbc\xa4\xa1\x57\x47\xf7\xb1\x6e\x75\xba\x5a\xdf\x29\x73\xae\x2b\x74\x4f\xff\xf6\x95\x8d\x6c\x7b\x52\x05\x73\xb2\xc0\x62\x21\x9b\x19\x9e\x08\xba\xa0\x11\xce\x50\xfe\xcd\x83\x5e\x74\xb1\xf1\xda\xce\x8e\xb1\x1a\x5b\x9b\xa9\xcb\x1b\xa5\x2a\x1f\x86\x71\x91\x12\x2b\x8e\x37\x9c\x7f\x42\x82\x27\x24\x58\xe2\xf0\x9e\x90\x60\xe5\xf1\xac\x27\x20\x78\x6f\x40\xd0\x77\x33\xd8\x31\xf0\x41\x36\x53\xfb\x83\x0d\x5d\xcc\x1a\x6d\xa3\xe9\x6e\x9b\xf3\xfd\xed\xdd\xf5\xdf\xda\xf5\x03\xdb\xd9\xbd\x27\xc4\xb7\xd3\xf6\xcf\x63\x6b\xe5\x7b\x3a\x5b\xc8\xdc\xfd\x79\xfc\x84\xbd\xca\xbc\x74\xe3\x2c\x92\xd6\x71\xf1\xcc\xa1\xae\x6b\x5e\x62\x7e\x57\x16\xf7\x2c\x26\x9e\x08\xa4\xab\xba\x4a\xf8\xc7\x1f\x96\xb6\xb3\xf1\x5a\xc8\x9c\x4a\x14\xad\xfc\x6e\x19\x01\xff\x61\xc2\x39\xbb\x7a\xc0\x23\x8b\xf3\x4b\x26\xee\xcf\x56\x69\x71\x12\xa5\x49\xa4\xe0\xa2\x26\x0f\x0d\x0e\xd1\xa8\xb8\x13\xe7\xee\xaf\x72\xdd\x7d\xd7\x67\xf2\xd9\x7c\x57\x30\xf9\xae\x7d\x30\xe9\x8e\x66\x47\x25\x95\xc0\x59\xb4\x02\x92\x6d\xb5\xa4\x53\x6b\x78\x53\x8a\x91\xd9\x0d\xea\xdc\x7c\xfd\x6a\x9e\x8d\x53\xf3\x31\xf3\x1c\xca\xbe\xe3\x1c\x19\x8f\x8b\x41\xeb\xc4\xb2\xb9\x56\x47\xec\x12\x4d\x6b\x9f\xf2\x51\xd8\x55\xe0\xae\xfa\xcd\x9e\x19\x45\x3a\x2f\xe8\xfa\xa6\x82\x2c\xfb\xf3\x8a\x07\xb9\xab\x0a\x4a\xad\xf5\x9e\x0b\x74\xfb\xc3\x33\x54\xf8\xde\x4a\x0a\x17\x37\x43\xa7\x37\x77\xa2\x47\x6f\xae\x54\x22\x5f\x0d\x06\x33\xaa\xe6\xe9\xa4\x1f\xf0\x78\x20\x49\x2c\x53\x36\x3b\x0f\x58\xa0\x32\x5d\x9d\x3b\x5d\x9d\x93\x84\x6a\xa6\xbe\x3f\xfb\xfe\xec\xff\x03\x00\x00\xff\xff\x89\x50\xda\xce\x2c\xad\x00\x00")

func apiSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_apiSwaggerJson,
		"api.swagger.json",
	)
}

func apiSwaggerJson() (*asset, error) {
	bytes, err := apiSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api.swagger.json", size: 44332, mode: os.FileMode(420), modTime: time.Unix(1546466431, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"api.swagger.json": apiSwaggerJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"api.swagger.json": &bintree{apiSwaggerJson, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
