// Code generated by go-bindata.
// sources:
// assets/generated/swagger/api.swagger.json
// DO NOT EDIT!

package swaggerjson

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _apiSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3d\xfd\x6f\xdb\xb8\x92\xbf\xf7\xaf\x18\xf8\x0e\xb8\x14\x68\xec\x6e\x0f\x0f\x78\xe8\xe1\xf0\x2e\x2f\xe9\xeb\x1a\x6d\xd3\x20\xee\x07\x16\xd7\x85\x41\x4b\x63\x9b\x1b\x89\x54\x49\xca\x5e\xef\xa1\xff\xfb\x81\x1f\xb2\x65\x59\xb4\x65\xc9\x89\x95\xc6\x0b\x2c\x1a\x4b\xd4\x70\x66\x38\x24\xe7\x8b\xc3\xff\x7b\x06\xd0\x91\x73\x32\x99\xa0\xe8\xbc\x86\xce\xab\xee\xcb\xce\x0b\xfd\x8c\xb2\x31\xef\xbc\x06\xfd\x1e\xa0\xa3\xa8\x8a\x50\xbf\xbf\x8c\x52\xa9\x50\xc0\x07\xc2\xc8\x04\x05\x5c\xdc\xf4\x4d\x7b\x80\xce\x0c\x85\xa4\x9c\xe9\x56\xb3\x97\xdd\x0c\x10\x40\x27\xe0\x4c\x91\x40\x2d\xa1\x01\x74\x18\x89\x0d\xb8\x01\x89\x65\xca\x26\x70\x79\x7d\xf9\xc9\x35\x07\xe8\xa4\x22\xd2\x2f\xa7\x4a\x25\xf2\x75\xaf\x37\xa1\x6a\x9a\x8e\xba\x01\x8f\x7b\xd2\xb6\x3f\x0f\x58\xa0\x7a\x81\xc5\xe5\x3c\xb6\xb8\x9c\x93\x84\xae\x60\x60\x4c\xa8\x81\x42\xc2\x98\xb2\xff\xc9\x7f\xd8\xa5\xbc\x63\x9a\xfd\x78\x06\xf0\xc3\x50\x2b\x83\x29\xc6\x28\x3b\xaf\xe1\x7f\x2d\xce\xa6\xef\x8c\x00\xfd\x43\x7f\xf1\xbb\x69\x1b\x70\x26\xd3\xb5\xc6\x24\x49\x22\x1a\x10\x45\x39\xeb\xfd\x21\x39\x5b\xb5\x4d\x04\x0f\xd3\xa0\x62\x5b\xa2\xa6\x72\xc5\xf2\x1e\x49\x68\x6f\xf6\x4b\x46\x65\x9e\x7b\x13\xcc\x33\x53\xa3\x9f\xc6\x31\x11\x0b\x4d\xee\x57\x1a\x45\x20\x50\x09\x8a\x33\x04\x35\x45\x90\x8a\xa8\x54\x02\x1f\x03\x01\x07\x0c\x08\x0b\x81\x2a\x09\x77\xe9\x08\x03\xce\xc6\x74\x02\x63\x2e\x20\xe0\x8c\x61\xa0\xe8\x8c\xaa\xc5\x92\x95\x00\x1d\x9e\xa0\x30\x28\xf7\x43\xdd\xc7\x5b\x54\x4e\x0e\xf2\x8d\x04\xca\x84\x33\x89\x72\x0d\x37\x80\xce\xab\x97\x2f\x0b\x8f\x00\x3a\x21\xca\x40\xd0\x44\x39\x89\xc9\x01\xb2\x14\xe9\x01\x21\x1b\x9f\x01\x74\xfe\x5d\xe0\x58\x7f\xf1\x6f\xbd\x10\xc7\x94\x51\x0d\x41\x66\x5c\x1a\x3a\x59\x18\x92\x84\xae\xb0\xbc\xc5\x24\x5a\x74\xd6\x00\xfd\x78\x56\xf6\xf7\x8f\x1c\x39\x09\x11\x24\x46\x85\x62\x35\x78\xf6\xbf\x02\x21\x99\x28\x9b\x7f\x5f\x6c\x25\xf2\x9a\xc4\xa8\xc7\x41\x8f\x4a\x36\x12\x8a\xc3\x08\x21\xe2\xfc\x0e\x43\x48\x93\x6e\x11\x04\x35\x5f\x7e\x4f\x51\x2c\x8a\xaf\x04\x7e\x4f\xa9\x40\x3d\x24\x63\x12\x49\x2c\xbc\x56\x8b\xc4\x20\x26\x95\xa0\x6c\x92\x27\xff\xc7\x8b\xdd\xe4\x90\xb9\xec\x4a\x0c\x04\xaa\xe1\x1d\x2e\x86\x34\xdc\x41\xdb\xa7\x29\xc2\xc0\xb4\x7f\x87\x8b\x7e\x68\xc4\xe9\xe2\xa6\x0f\x17\x41\x80\x52\xb6\x91\x2c\x62\x30\xd3\xd4\x55\x26\xcd\x12\xf3\x0e\x17\x4b\xf2\x48\xfb\xc8\x13\x38\xd1\x88\xef\xa6\xe9\xd6\x34\x6c\x2d\x29\x7f\xa5\x02\xbb\x24\x49\xaa\xc9\xde\x45\x92\xb4\x58\xea\x0c\x2d\x0a\x19\x61\xaa\x02\x2d\x9f\x4c\xc3\x76\x0f\x4c\x42\xa4\x9c\x73\x51\x65\x68\x6e\x5c\xd3\x76\x13\x24\xd3\xd1\x12\xf3\x8a\xcb\x5d\xee\x8b\xb6\xd2\x96\x08\x3e\xa3\xe1\xda\x46\x5d\x46\x4e\x7e\x67\xca\x3e\x91\x70\x46\xe6\xb2\x67\xb8\xd3\x9b\xc5\x73\x22\xb0\x87\x2a\x78\x7e\x7f\xb4\x15\xde\x22\x4b\xe3\xc2\xde\x6b\x9e\xa7\xcc\xec\xfc\x58\x1c\x23\x30\xeb\x5f\xc9\x43\x4d\xc1\xe6\x63\x4b\xd2\xe6\x73\x29\xa7\xeb\xba\xc2\xef\x1b\xbc\x1b\x93\x34\xd2\x2a\x58\x0e\x95\x52\x7d\x22\xf7\x65\x47\x91\x49\x51\x93\xc8\xb4\xe9\xd5\xc7\xbf\xbb\xbf\x96\x43\xdb\x09\x31\x42\x85\xdb\xd5\x3d\xdb\x66\xa5\xde\x6d\x51\xdd\xae\x4c\xd3\x47\xa0\xbd\xad\x21\xda\x16\x05\xee\xeb\x94\x28\xa0\x32\xaf\xc0\xfd\x87\x04\xfd\xa1\xd6\xe3\x42\x94\x4a\xf0\x45\x6b\xe6\xfe\x49\x85\x3b\xa9\x70\xc7\x25\xe5\xa4\xc2\xb5\x79\x60\x4e\x2a\xdc\x49\x85\x3b\x34\x6d\x3f\x8b\x0a\x57\x61\x5c\x02\x12\x45\x23\x12\xdc\x75\x53\x11\x55\x10\xb5\xcf\xb7\xef\xb5\x92\xa0\xbf\x02\xfd\x19\x28\xde\x1a\x11\x5b\x92\xa2\x7b\x41\xa9\xaa\x4d\x9e\xfe\x55\x26\x6f\xee\xb3\x87\xa1\xe7\x90\xda\x75\xc2\xe5\x0e\x57\xaa\x99\x4a\x52\x2f\x0f\x55\xd4\xeb\x4b\x81\xe4\x51\xa8\xd7\x6b\x88\x3e\x88\x7a\x3d\xe2\xe1\x86\x10\x58\xf9\x28\x7b\x93\x13\x0f\x25\xd2\xa2\x74\x1c\x9a\x01\x1f\xe4\xa4\x0a\xf9\x87\x10\xb8\x74\x87\xbc\x91\xf0\x8f\x54\x2a\x20\x7b\x0a\xde\x85\xf9\xcc\x21\x70\xcd\x43\x94\x6d\x96\xbe\x35\x6c\x9f\xa2\xf4\xad\x31\xe0\xde\xa5\xef\x59\x8e\x7b\xc5\xb8\x52\x2f\xa2\x6b\x4b\xe0\x1e\xc1\x25\x02\xfa\x5b\xbd\x07\x38\x58\xb2\x52\xcc\xe8\xbd\xee\xb0\xc5\xc2\xb9\x8e\xe9\x83\x48\xe7\xc9\x52\x3f\x59\xea\xc7\x25\xe5\x64\xa9\xb7\x79\x60\x4e\x96\xfa\xc9\x52\x3f\x34\x6d\x3f\x8b\xa5\x7e\xdf\xfa\x51\x9a\x4c\x04\x09\x71\x5f\x15\x29\x15\x0c\xdc\xa7\xc0\xcd\xd0\x4b\x23\xb6\x04\x26\x74\x86\xac\x82\x4a\xff\x16\xd5\x67\x0b\xc0\x61\xde\x67\x63\x2e\x62\xd3\xa2\xe5\xfa\x93\x17\xef\x07\xd1\xa6\x4e\xd3\xb0\x9d\x0e\xb3\x93\x96\x7b\xd2\x72\x8f\x4b\xca\x49\xcb\x6d\xf3\xc0\x9c\xb4\xdc\x47\xa1\xe5\xd6\xcb\x93\x00\xa5\x9f\xcd\x11\x88\x40\x08\x38\x93\x7a\xbb\xa5\xcc\xe6\x1d\x3b\x45\xe9\x11\xc6\x0f\x76\xba\x73\x95\xc2\x38\x51\xa0\xf8\x52\x1b\xac\xe2\xce\x5d\x57\xa0\xda\xac\xed\xad\x63\xfa\x14\x7d\xb9\xeb\x1c\x38\x92\x33\x57\x60\x88\x4c\x51\x12\xc9\x9e\xd6\x07\x73\xc6\xca\x4e\x11\x4d\x93\x90\x28\x04\x32\x97\x90\x03\x03\xa9\xc4\xd0\x59\x2c\x55\xe4\x55\xc3\xb8\xf8\x3a\xb8\x5c\x41\x68\xb7\xd4\x6e\xe2\xfb\x34\x65\x77\x93\x0f\x2d\x90\x60\x63\xbc\xd4\x91\x61\xfd\x61\x63\x29\xd6\x40\x1e\x97\x1c\x17\x30\x7e\xc2\x92\x5c\xe0\xc4\x71\x64\x79\x8a\x51\x9c\x17\xdf\x3d\x72\x78\x43\x4c\x22\xbe\xc0\x10\x34\x0c\x08\xa6\x44\xa8\x2d\x02\x6b\x93\x64\x7f\xc5\x28\xbe\x2c\xb6\x6c\x9b\xa4\x16\x50\x7d\x10\x11\xdd\x9c\xf1\x65\xc4\x66\x47\x1a\x15\x8d\x22\x14\x20\xa7\x3c\x8d\x42\x18\x21\x50\x26\x15\x89\x22\x0c\x81\xb3\xd6\x68\xdf\x09\x09\xee\xc8\x04\x33\xd6\x56\x51\xc4\x37\x08\xd3\x8b\x62\x6b\x08\x2a\xca\x78\xe9\x10\xe9\x36\x70\x4d\xe2\x07\x32\x11\x4e\xce\xac\x93\x33\xeb\xe4\xcc\x7a\x68\x5a\x4e\xce\xac\x36\x13\xf4\x73\x3a\xb3\x4e\xb1\xa2\x76\xc6\x8a\x2a\x27\x22\x5f\x40\xca\xe8\xf7\x14\x81\x86\xa0\x38\x50\x16\xd2\x40\x9b\x82\x6a\x4a\xe5\xc3\xe6\x25\x57\xd1\x75\x4e\x29\xe3\x4f\x20\x65\xdc\xd9\x0d\x70\xc6\x05\x08\x74\xbf\x9e\xe7\x2c\xba\x6f\xec\x93\x96\xce\xb9\x6e\x3c\x42\x7b\x6e\x30\x0d\x14\x9d\x21\x50\x53\xa5\xc3\xa8\xbb\x53\x22\x81\x44\x02\x49\xb8\x80\x11\x22\x5b\xd9\x86\x73\xaa\xa6\xb6\xb4\x87\x5e\x96\x0a\xfe\xf8\xa2\x8d\xd8\xb7\xfd\x3f\x0a\x23\xb1\x88\xeb\x53\x74\x64\x14\x79\x70\x1c\x17\x86\xb5\x19\xd7\x7c\x70\x75\xe5\xde\x81\xf2\x4b\xe8\x4d\x96\xe9\xfe\x69\xa3\x65\xdb\x04\xb4\x80\xea\x53\x94\xcf\x02\x0b\x8e\x23\x9e\xab\x5a\x53\x7b\x27\x65\xb9\x4f\x81\xae\xb2\x92\x80\x8c\x78\xaa\x80\x24\x14\x24\x8a\xd9\xae\xac\xac\x2f\x16\xc2\xe3\x49\xc7\x72\x08\xd7\x92\xd6\x3a\x83\xb5\x2c\xab\x95\x43\x6d\x55\xd8\xaa\x78\xf6\x61\xed\xf7\xc5\xbb\xc1\x20\xc1\x20\x3f\xb0\xd9\xbe\xce\x47\x7f\x60\xb0\xda\xbe\xb4\xea\x9e\xa0\x50\xb4\xc0\xe9\x4e\xce\xfd\x5f\x1c\x82\xea\xe7\x33\xfc\x31\x80\xb5\x6a\x68\xb9\x48\x83\xe2\x30\x4a\x69\x14\xe6\x83\xde\x9d\x52\x96\x32\x1e\xe2\x30\xe1\x3c\x2a\xa2\xb7\x45\xdd\x5f\xf5\x79\xcd\x43\x84\x1b\xce\x23\xe3\x0f\x2b\xef\x81\x84\xe1\x30\xe0\x29\x53\xbe\x1e\x28\x53\x58\xf4\x1e\x76\xac\x38\xbb\xd7\xff\xf9\xca\xd3\x7f\x1a\x8f\x6c\xd9\x2a\xca\x02\x81\x44\x22\x8c\x16\xe5\x58\x08\x8c\xf9\x0c\xef\x0d\x11\xb6\xc4\x24\xc4\x32\x4c\x4a\x17\x90\xad\xc2\x37\x90\xd3\xa6\xc2\xa7\x39\xcf\xcc\xf1\x2b\x0f\xc1\x44\x08\xb2\xbe\x68\x77\xa8\xc2\xb8\xd8\x7e\x1f\x61\x1d\xc8\xe9\x07\x12\x4c\x29\x43\x83\xbd\x4f\x91\x5f\x71\xce\xb5\x96\x30\x9f\xd2\x60\x0a\x73\x84\x39\x61\x26\x47\x81\x84\xc6\x8a\xda\x29\xc2\x6e\x68\xef\x95\xd2\xe2\x50\x0d\xe4\xf4\xd6\x74\x7b\x28\x62\x2d\x11\x30\x16\x3c\xf6\x50\xbc\xbf\x08\x7d\xf9\xf0\x95\x08\x7c\x8c\x52\x64\x31\x7f\x0a\x82\x64\x29\x6d\xa5\x2c\x95\xca\x78\x03\x41\x9a\x16\x95\xf6\x2d\x76\x72\x35\x0c\x7d\xcc\xbb\x5f\x24\xcb\x87\xe3\xd3\x14\x41\x7f\x6c\x9c\x8b\x83\xc1\xaf\xce\xb9\xb8\x8b\xa4\xb5\xa3\xbf\x4e\xe1\xb8\x78\x37\x30\x86\x17\x0b\xf0\xad\xe0\x69\xd2\x84\x1e\xa7\xb8\xd7\xa3\x87\xe5\x3c\x8d\x13\x83\x49\xb9\x5a\x66\xe1\xed\xdf\x47\x46\x25\xe8\xd6\x70\x36\x50\x84\x85\x44\x84\xc3\xab\x57\xc3\xd9\xab\x17\x80\x2a\xe8\x3e\x2f\xef\x32\xa6\x6c\xf8\x3d\x25\x4c\x51\xb5\xb8\x87\xed\xfc\x03\x65\x34\x4e\x63\x70\xdb\x3a\x1f\x5b\x7b\x92\x05\x28\xe1\xcc\xb9\x14\x8d\x96\xf5\x17\x0a\xee\x43\x91\xfc\x79\xaf\x28\x92\x3f\xeb\xa1\xf8\xac\x80\x6a\xc9\x70\x98\xb1\x96\x60\xdd\xa5\x40\xec\xf0\x10\x16\x96\x75\xd6\xd9\x22\xce\x5f\xad\x38\x7f\x1d\x5c\x11\x45\x2e\x91\x15\x4a\xc7\xee\x2b\xcb\x2e\x58\x56\x47\xd2\xbe\x9a\x35\xd2\x02\x80\xb3\x54\x9e\x23\x91\xea\xfc\x97\xad\x32\x46\x66\x84\x46\x64\x44\x23\xaa\x16\xc3\xbf\x38\x3b\xc4\xa6\x50\xd1\xcf\x59\x44\x3c\x8f\x0a\x18\x54\x72\x44\x8c\x5e\x40\xf6\xf7\xab\xc0\xfc\x3d\x47\xfd\x77\xb8\x49\x9d\x7f\xec\x6d\x3f\x7a\x9c\xc0\x0d\x54\x95\x71\x3d\xd8\x32\x75\xa8\x25\x24\xfe\x5b\x37\x22\x62\x82\xa7\xc5\xe3\xe7\x59\x3c\x6e\x84\x2b\x0b\x9d\x0a\x0c\xfb\x85\x79\xb5\xb7\xa4\xcd\x92\x60\x48\xc3\xda\x5b\xe2\x97\x9b\x4b\xa0\xe1\x0b\x18\x45\x84\xdd\x99\xbd\x5e\xff\xff\x4d\x1b\xfa\x44\x21\x70\x86\xe6\xc1\x82\xa7\xdf\x3a\x2f\x60\x4c\x4d\xca\x0e\x1d\xeb\x07\x26\xdb\xfc\x9f\xbf\x7d\xd4\x30\xca\x47\x5d\x62\x90\x0a\xbd\xda\x18\x1e\xd6\x45\x73\xe0\xa0\x6c\xdb\xb2\x29\x89\x87\x82\x47\x38\x24\xa2\xde\x82\x6a\x02\x28\x17\x1f\x40\x03\x31\x14\xe7\xd3\xeb\xcf\x88\x60\xcf\xb3\x71\x94\x92\x07\xd4\x78\xa6\xc2\xb0\x92\x24\xfd\x8b\x0b\x98\x4f\x91\x81\xe4\xb1\x89\x9d\xb1\x89\x34\xbc\xcb\x02\x10\x96\xd7\xe1\xba\xf0\xbc\x45\x86\x82\x06\x4b\x57\x75\xe6\xb3\xe7\x92\x2a\x2e\x16\x4d\x44\xc6\x96\x80\xaf\xb3\xe9\xac\x4e\x1e\x7c\xbe\x7d\xbf\x62\x93\x09\xa9\x08\x4c\xb8\xc7\x27\x53\x57\x67\xcb\x77\xa8\xc1\xdb\x70\xcc\x0e\x0d\xb4\xe0\x93\x2b\x71\x28\x36\x60\xdd\x84\xaa\xe1\xa6\x7f\x74\x3f\x31\x53\x64\x02\x9c\x59\x25\x94\x5a\xbe\xb9\x31\x2d\xe5\x9e\xee\x32\xe0\x71\x4c\x1b\xe8\xf1\x44\x4e\x97\x7a\x2f\x55\xe0\xc0\x79\xbb\x53\x02\x71\x28\x15\x51\x75\x87\x0d\xd5\x54\xaf\x8c\x02\x18\x57\xa6\x57\x0d\x11\xe6\x44\x42\x10\x21\x61\x76\x3a\x8c\x52\x1a\x79\x90\x30\xce\xbe\x61\x58\x17\x81\x2b\xb3\x74\x8d\xad\xcf\xd0\x43\x26\x6f\x34\x8e\x4e\xaa\x74\x27\x13\x6e\x13\xa1\x15\xd7\x7c\x4d\x68\xe4\xf1\x1b\xba\x97\xa2\x56\x7f\x97\xee\x63\xd3\x55\x39\xfc\x24\x22\x4a\xcb\x78\x2d\xf8\x37\xee\x63\xa0\xca\x0e\x93\xed\xcf\xa6\xcd\xf4\x40\xa4\x8c\x51\xa6\xc5\x76\xd7\xec\x2b\xf3\xf7\xae\x9f\x5c\x68\x30\xfb\xd6\x73\x02\xeb\xce\x06\x7f\xa6\xa0\x77\x17\x2b\xa4\xec\x35\xeb\xd9\x97\xc8\xe7\x73\xe2\xd4\x36\x12\xbc\x79\x76\x95\xb6\x2d\xfd\x75\xb0\xee\x83\x4f\xa5\xdd\x1b\xcd\x86\xa5\xe5\x61\xc3\x1b\xb3\x4d\x0c\x8a\x65\x99\x8e\xe1\x05\xa8\x79\x78\xce\x33\xe3\xb2\xfc\xa6\xba\x91\x90\x9b\xb2\x04\xa9\x5c\x34\x62\x8f\xc4\x28\x8f\xc9\x37\x6f\x10\xa6\xf1\x1d\x38\xca\xa3\x78\xf1\x75\x00\xf9\x56\xe5\x58\x14\x8e\x9c\x6c\xc1\xa3\x52\xfc\xca\x2f\xed\x1a\x1d\x99\x60\x40\xc7\xee\x1a\x98\x6f\x6c\x1d\x82\x55\xc2\xcd\x79\xac\xff\x86\xbf\xfd\x57\x39\xbe\x2e\x39\xab\x39\xc2\x39\x87\x75\xf9\xca\x22\xa7\x07\xe8\x25\x8b\xac\x94\xef\x3a\x2e\x95\xa8\xb6\x18\x5c\x66\x00\x3c\x1b\x93\x7b\x9d\x0f\xf9\xd6\xd9\x23\x36\x8b\xd6\x35\x58\x1e\xf8\x06\xb9\x19\x84\x11\xe7\x5a\x01\xf1\xd9\x98\xa5\xaf\x57\x8b\x07\x91\x36\xf5\x8d\x80\x4c\xcd\x42\x3a\x4e\xa3\x2c\xd9\xaa\x0e\xd1\xc5\x40\x68\x93\xa8\x46\x52\xdb\xbe\xf2\x65\x30\x7b\x9c\xa3\x36\x91\xb8\x6e\x47\xa5\xe9\xc5\x9e\xe5\x35\xcb\xf2\xad\xdb\x97\x27\xf7\xd7\x33\x17\x0b\x29\xb8\xb5\xf7\x78\x7f\x62\xee\x51\xb6\xdd\xcb\xcd\x05\xe0\xc1\x0c\x46\x4f\x9e\xa5\x4f\xd1\x59\xe6\x3a\xd6\x36\xe0\x8b\x19\x90\x35\x26\xa5\x5b\x83\xae\x50\x11\x1a\xf5\x15\xc6\x4d\x18\x57\x93\x96\x15\x1d\xdb\x73\x1d\xea\x6a\x41\x25\x77\x65\x79\x26\x85\xb9\xde\x6c\x18\xa3\x94\x64\x52\xaf\xaf\x8b\x30\x34\x9b\x0b\x89\x4a\xb2\x82\xd6\xaf\x50\xdb\x89\xce\xea\x46\xb5\xc6\xca\x5f\xee\x72\x36\x63\xb8\x99\xbb\xd9\x2a\x45\x55\x2d\xbe\xf5\xf7\x53\xb7\x69\x5b\x28\x7e\x59\xde\x83\x2d\x23\x24\x02\x85\xe2\x77\x58\x37\x98\xb0\xe2\x8b\xb9\xd1\x0f\x2c\x44\xb0\x20\x6b\xcf\xa1\xd3\xec\x69\xd5\xec\x69\x89\xe0\xee\x29\x44\x83\x22\xd6\x3e\xc6\x6d\x1e\xd9\xe8\x0c\x3e\x5d\x7c\xfa\x3c\x18\x7e\xbe\x1e\xdc\xbc\xb9\xec\xff\xab\xff\xe6\x2a\x9f\x4c\x78\x73\xfb\xf1\x4b\x7f\xd0\xff\x78\xdd\xbf\x7e\x9b\x7f\x7e\xfb\xf9\x7a\xe3\xd1\x9b\xcb\x8f\xd7\x97\xfd\xf7\x85\xc7\x83\x4f\x1f\x6f\x6e\x0a\xcf\xde\xdc\xde\x7e\xbc\xcd\x3f\xb8\x7a\xf3\xf6\xf6\xe2\xea\xcd\x55\xc6\x82\x65\xb6\x66\xfe\x2c\xc7\x16\x4c\x57\xdc\x3d\x87\xcd\x66\xaf\xe1\x9a\x2b\x90\xa8\xbe\x31\x38\x87\x3c\x49\xaf\xc1\xe8\x40\xb9\x27\x66\x68\x70\x79\x8c\x63\xdd\x0a\xa6\x12\x46\xa8\x95\x0b\xe7\x8d\xee\x1a\x80\x8e\x17\x16\x96\xfb\xb1\x15\xcc\x94\x48\x9b\x50\xef\xc0\xd8\xdb\x30\x25\x8c\xd3\x28\x5a\x40\x2a\xc9\x28\x42\x07\x7a\xc5\x53\x07\x7e\xf5\xa0\xa4\x0b\xa2\xac\xff\x7c\xce\xc5\x9d\x06\x48\x4c\x4e\x7f\xb4\x70\x58\x87\x9c\x61\xe6\x55\x75\xb8\xbc\xd0\x5a\xfa\x14\x88\x74\x56\x7c\xa6\x39\xc5\xc4\x60\x6a\xbc\x93\x21\x82\xe4\x63\xa5\xed\x3d\x8b\x55\x36\xa4\x16\xa5\xec\x57\x35\xce\xd9\x63\xe6\xa1\x81\x63\xc4\xc0\x02\x31\x7f\x6e\x85\x10\x93\x85\x39\x3a\xcc\x2c\x7f\x0c\x80\x4c\x6c\x2c\x8c\xec\xd7\x56\x30\x2e\x3d\xd9\x14\x66\x10\x86\x41\x9a\x21\x1c\x04\x4a\xc5\x05\x9a\x31\x80\x71\xca\x02\xbb\xa2\x50\xb5\xd8\xad\x3d\x96\xa4\x73\x34\x59\xd2\x23\x1e\x14\x7d\xf0\xd5\x17\x43\x63\xa8\x98\x2a\x14\x1b\x71\xdd\xe2\x5a\xd7\xfa\x3c\xd5\x2c\x64\x68\x43\x63\xf7\x96\x9e\x55\x29\x1d\x27\x07\xc8\x13\xb5\x2f\x04\x43\xeb\xac\xe6\x25\xb1\xd0\x26\x82\x14\x12\x45\x86\x41\x31\x05\xa3\x32\x27\xca\x32\x39\xb6\xbb\x95\x1e\x46\xe4\xaa\xf8\xdc\xea\x09\x9c\x40\xc9\x53\x11\x6c\x26\x7d\xec\xc5\xae\x92\xd8\x75\x39\x92\xff\xfc\xed\x23\x58\x49\x6d\x8f\xf8\x7b\xd2\x3c\x1e\x5c\xfc\x8f\xe5\xfc\xf6\x5f\x91\xbc\xbc\x0f\xc3\x1b\x5c\x6a\xea\xea\x5e\x63\x40\xe6\xf7\xde\xe1\xcd\xcd\x3a\x5d\x77\xe9\x3e\x6a\x3f\xa7\x9f\x0d\xc7\x8e\x86\x2c\x99\x7d\x0e\x41\x2a\x04\x32\x15\x2d\xac\xb7\x53\x2b\x5b\x73\xa9\xf5\xa5\x98\x10\xcf\x7c\xbe\xfb\xbb\x6c\x1c\x17\x9f\xad\x62\xaa\xef\xd2\x11\x0a\x86\x0a\x7d\x11\x85\x06\x71\x8d\xd2\x9d\x68\x8f\x90\x42\xe3\x18\x47\x55\x35\xab\xb4\x9f\x7d\x62\x13\xbb\x3a\x3a\x58\x78\x62\x57\x47\x5b\x23\x14\x53\x3a\x99\x0e\xf3\x09\x81\xf7\xe3\xbb\xdf\xcc\x49\xc8\xe9\xef\xbf\x5e\x78\x7c\x04\xa8\xb4\xbd\x31\x1c\x93\x91\xa0\x41\x6d\xc9\xb6\x9f\xbb\xb5\xb6\x10\xc1\xaf\xb5\x72\xb4\x36\x42\xe2\xe7\xf2\x9c\xc8\xfc\x36\x03\xa3\xc5\x5a\x19\x01\xcf\xaa\xee\x34\x9a\x86\x3e\x0b\xe3\x88\xf2\x0f\x4f\x68\x7c\xbd\x45\x97\x45\x86\x19\x64\x87\x0e\x9b\x0e\xda\x01\x4e\x40\x05\x9c\x29\xc1\xa3\x61\x12\x11\x76\xcf\x07\x3b\xee\xe1\x2c\x54\xc0\xe3\x44\x50\x89\xbb\x95\x55\x3d\xe9\x50\xfc\xc4\x04\x92\x84\x0e\x91\x85\x09\xa7\xb5\x63\x69\x54\xe6\xaa\x8e\x11\x98\x91\x28\x45\x88\xe8\x1d\x02\x4d\x5e\x27\x5c\x28\x97\xd8\xe0\x0a\x21\x10\x98\x51\xa1\x52\x12\x41\xff\xa6\xa7\x5f\x7f\x63\x37\x44\x4a\x3d\x13\x6d\x54\x06\xf0\x4f\x85\x82\x91\x08\x82\x54\x2a\x1e\xa3\x90\x6e\xc5\x22\xa3\x08\x5d\x7a\x53\x9c\x32\x57\x02\xc4\xe7\x29\xaf\x35\x35\x0e\x73\xb2\xeb\xb8\xb3\xe3\x00\x67\xbc\x5a\x3f\x41\x1e\x94\xc6\xd3\x1c\x29\xb9\xa7\xbd\x7d\x7b\xfe\xa5\xe1\x6f\x7e\xe3\xcc\xca\xae\xf0\x85\xcf\x9c\x2c\x0f\x45\x54\xcb\x06\x5f\x0b\x2f\xd4\x8f\xf3\x96\xd6\xcc\x6c\x1f\x77\x6d\xce\x09\xc2\xb2\x52\x42\x2e\xf5\xc4\x73\xd4\xa2\x41\xb8\xc9\x18\x84\x0e\x80\x84\x39\x0a\xb4\x37\xea\xd4\xe0\x6f\x31\x7f\xfd\xe8\x06\x6e\xfe\xf0\x9f\xad\xf6\x13\x23\xf3\xe8\x9d\xba\xad\x4c\x48\x70\x98\x5e\x0d\x24\x7b\x96\x5e\x77\x6b\xe3\xac\x49\x12\x39\x83\x72\x4b\x46\x44\xc2\xab\xa9\xbe\xbb\x0e\x0b\xec\xc6\x73\x95\xc3\xbf\x2d\x17\x3d\x28\x8c\x64\x3d\x9e\xd8\xbe\x98\xb7\xc2\x42\x13\x47\xc2\x66\x3f\x19\xb4\xf2\xae\xf4\x8e\x50\x6f\x21\x32\x3d\x11\x81\x6e\x7a\xda\x5b\xa8\xce\x18\x4a\x85\x21\x2c\x48\x1c\xc1\xb9\x79\xf5\xc5\x74\xd1\x35\x4f\xb4\x86\x82\x4c\x49\x4f\xba\xa6\x41\x78\x98\x90\x45\xc4\xc9\x5e\xb1\xef\xdc\x6a\xb2\x50\xb8\xcd\xa5\x66\x61\xeb\x79\x90\x95\xc2\x3a\x33\x15\xbc\xa9\x98\x90\x24\xc1\x10\x24\x8f\x52\x43\x8b\x39\x72\x56\x76\x56\x6a\xf7\xcc\x57\x1b\x77\x7c\xb6\x6f\x61\xed\x17\x82\x78\x36\x74\x28\x17\x52\xdb\x8a\xdb\x8c\xd1\x87\xd4\xb7\xf2\xf6\xeb\x6e\x4d\xeb\x7d\xf1\xc6\xd8\x26\x63\xf7\xd3\x8d\x5b\x53\x27\x42\x2e\x23\xac\x16\x5f\x77\xdc\xdb\xd6\x3e\x4e\x5f\x12\x56\x54\xeb\x5c\x3a\xbc\x47\xab\x73\x2b\xed\x71\x8e\x15\x93\xe5\x4a\x6f\x0f\xd7\x25\x5c\x4a\xaa\x95\x72\x41\x27\x53\x05\x8c\xcf\xeb\x0d\xdb\x5a\x7d\xa7\xf6\x0d\x52\x7f\x9c\x53\x0d\xe7\x44\xc2\xc7\x77\x5b\x07\x67\x48\x4b\x0f\xc2\xc1\x36\xdd\x62\xd7\x79\xba\x72\xcc\xb2\x23\x52\xfd\xad\x01\x93\xcd\x2c\x17\xd3\x8b\xc9\x77\xcd\x02\x02\x6b\x4a\xfe\x96\xd1\x2a\xab\xee\xd7\xc4\x9d\x50\xbe\x6e\x54\x3b\xaf\x95\x85\xd7\xb6\xd5\xbd\xf7\xa5\x3d\x2f\x8b\xd0\x4f\x6a\xf6\xee\xaf\x4c\xbf\x87\x5a\xb7\x47\x11\xb4\x82\xa6\xef\x61\x89\xd1\x36\x06\xa8\x14\x65\x93\x7b\x88\xeb\x1c\xe5\xbc\x4a\xfd\xb4\x11\x9b\xc8\xb2\x13\x97\xf6\x9f\x31\x7a\x24\x91\xd7\xf2\xf2\xa7\xed\x5b\xd0\x1f\xad\xc1\xbf\x8a\xd9\xbe\x27\x23\x8c\x8e\x62\xef\xe7\x8b\xfc\x10\x88\x0c\x1e\x7e\xbb\xaf\x7e\xa4\xda\xf8\x11\x4b\xfb\xa8\xca\xad\x9b\xcd\x79\xbd\x47\x62\x6b\x59\x15\xf2\x42\xfd\xf1\x8d\xca\xe3\x9b\x35\xc7\xf3\xd5\xc6\x4b\xb3\x52\x0b\x15\xc6\x77\x91\xb3\x5e\xb8\xf4\xd8\x19\x2e\x6e\xff\xeb\x81\xdb\x50\x21\xbb\xd5\x65\x1f\x23\xe1\xbe\x37\xfb\x66\x8e\xa6\xeb\x95\x73\xc9\xdf\x35\xf5\x74\x4d\xe3\xba\x8b\x86\xf9\x12\xce\xe8\x78\x19\xe4\x75\x32\xf3\xdc\x96\x84\xb0\xb8\x9c\x7d\x4f\xc9\xa2\x4b\x79\x4f\xf2\x18\x27\xe9\xc2\x95\x3d\xf6\xec\x22\x07\x3a\x8c\x6f\xfb\x30\x97\x44\xd9\x32\x9a\xb6\x6a\x72\x6f\x79\x41\xa4\xe2\x70\x36\x7b\xd5\xfd\xe5\x97\xee\xcb\x0d\x07\xc7\xa6\x38\x0c\xe7\x34\xf4\xf2\xe8\x10\x66\xac\xe3\xd5\xf2\x02\xb5\x73\xdd\xa1\x7b\xfa\x8f\x6f\x6c\x60\xc7\x93\x2a\x98\x92\x19\xae\x37\xb2\x27\x35\x12\x41\x67\x34\xc2\x09\xca\x7f\x78\x94\x19\xdd\x6c\xb8\x94\xb3\x63\x18\x67\x4b\x31\x75\x79\xdc\x54\xe5\xa3\x32\x2e\x70\x62\xc9\xf1\xa6\xd7\x9c\x14\xc3\x93\x62\x58\xc0\xf0\x40\x8a\x61\x69\xd9\xf1\x93\x5e\x78\x30\xbd\xb0\x90\x54\xd1\x80\xb3\xa9\x44\xd1\x48\x35\xcc\x00\xf8\x6b\x5a\xe6\xd8\x77\x8f\x95\x33\xf3\xd3\x98\xfb\x03\x2a\x0d\x0a\xa2\x19\x5f\x3f\x17\x15\x71\xa8\x71\xd0\xba\xe4\xfe\x91\xbb\xbf\xcb\xa5\xcb\x66\x59\x1a\xca\xa6\x64\x80\x49\xc9\xe8\x82\x89\xc8\x9b\x53\x37\x54\x02\x67\xd1\x02\x48\x76\x1c\x87\x8e\x6d\x3e\xd8\x98\x62\x64\x4e\x0c\x39\xd5\xb3\x5b\x8e\xb3\xd1\xbb\x1f\xd2\x15\x5f\x34\x6f\x76\x6f\x7b\x9a\x27\x16\xcd\x25\x3b\x62\x97\x0b\x51\xf9\x24\xf8\x5a\xe6\xa9\xbb\x6b\x35\x7b\x66\x18\xb9\x53\x33\xf7\xdd\x42\x7b\x0c\xf5\x3c\x53\x94\xfd\xa1\xbf\x36\x1e\xa2\xa8\xba\xd0\xf9\xef\x3d\x6e\xeb\x6e\x72\xb8\x52\x16\xfe\x1b\x62\x7f\x62\x39\x3b\xf8\xf9\xb0\x66\xdc\x7e\x3a\xb2\x56\xbc\x13\xbe\x01\xcd\xed\x57\xa3\x4f\xa6\x4f\x11\x97\x76\x54\xff\x6a\x9c\xa5\x92\xe9\x4a\xba\xe7\x39\xe6\x0f\x29\x73\x8f\x2d\xff\x48\x2c\xaa\xf5\x09\xfa\x54\x96\xa5\xcd\xdc\xd8\x93\xa9\x73\x32\x75\x4e\xa6\xce\xa1\x4d\x9d\xe5\x05\x58\x59\x2e\xf6\x15\x0f\x72\x37\x60\x15\x46\xeb\x03\x17\xe8\xca\xa5\x64\x5a\xe1\x07\x4b\x29\x5c\xdc\xf4\x1d\xdf\x5c\x81\xab\xce\x54\xa9\x44\xbe\xee\xf5\x26\x54\x4d\xd3\x51\x37\xe0\x71\x4f\x92\x58\xa6\x6c\x72\x1e\xb0\x40\x65\xbc\x3a\x77\xbc\x3a\x27\x09\xd5\x48\xfd\x78\xf6\xe3\xd9\xff\x07\x00\x00\xff\xff\xf2\x39\x30\xf6\xec\xb7\x00\x00")

func apiSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_apiSwaggerJson,
		"api.swagger.json",
	)
}

func apiSwaggerJson() (*asset, error) {
	bytes, err := apiSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api.swagger.json", size: 47084, mode: os.FileMode(420), modTime: time.Unix(1546561362, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"api.swagger.json": apiSwaggerJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"api.swagger.json": &bintree{apiSwaggerJson, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
